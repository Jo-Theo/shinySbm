[{"path":[]},{"path":"https://theodore.vanrenterghem.io/shinySbm/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement Golem User. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Golem User Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/articles/ShinySbmApp.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"shinySBM package","text":"vignette illustrates use {shinySbm} package shiny based graphical user interface (GUI) {sbm} package. packages made apply Stochastic Block Models network dataset. dataset can two format: edges list connection matrix. First see use shiny application package. second part see use external functions plotSbm() visSbm().","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/articles/ShinySbmApp.html","id":"the-shiny-application-shinysbmapp","dir":"Articles","previous_headings":"Introduction","what":"The shiny application: shinySbmApp()","title":"shinySBM package","text":"shinySbmApp() function contain {shiny} application help use help learn basics {sbm} package. Users can import data inside apply Stochastic Block Models. can transform network data edges list connection matrix. SBM ran, users can explore different number groups selected {sbm}. can get models outputs : table parameters, plots, interactive network visuals, automatic reports (pdf html) (French English), R script repeat analysis outside app tables block attributions. following code show run shinySbmApp() R console. done browser load page. page can import dataset clicking Browse button embedded red.  load , install helper (1) can show advice adjust importation. example , imported set Adjacency Incidence matrix can see (2), imported Edges list. , need change nature imported data.  warnings , can press button Matrix Builder, extract essential information dataset. used edges list, adjacency matrix built.  matrix correctly imported. go SBM application (1) page click Run SBM button (2). calculation done see small summary current model. small module Block settings allows clicking graph (numeric input) select another block number change current model. can also tune SBM model page Settings button.  ’s time explore visuals outputs pages.","code":"library(shinySbm) shinySbmApp()"},{"path":"https://theodore.vanrenterghem.io/shinySbm/articles/ShinySbmApp.html","id":"external-functions","dir":"Articles","previous_headings":"Introduction","what":"External functions","title":"shinySBM package","text":"following codes built shinySbmApp application, page Report R code option. next chunk made {sbm} package functions. See vignette learn {sbm} function plotSbm convenient function can take arguments: matrices objects produced estimateBipartiteSBM() estimateSimpleSBM() {sbm}. plot nice matrix tiles, can ordered blocks , transposed etc…  function visSbm convenient function can take arguments objects produced estimateBipartiteSBM() estimateSimpleSBM() {sbm} (doesn’t take matrices). make {visNetwork} type object represent network condensed blocks. Thanks reading, question remain, contact us: shiny.sbm.dev@gmail.com","code":"# Loading Dataset  myNetworkMatrix <- fungusTreeNetwork$fungus_tree  # Fiting SBM mySbmModel <- estimateBipartiteSBM(netMat = myNetworkMatrix, model = 'bernoulli',                                    estimOptions = list(plot = F, verbosity = 0)) vignette(\"SBM_fungus_tree_network\") plotSbm(   mySbmModel,   ordered = TRUE,   transpose = TRUE,   labels = c(row = 'Fungus', col = 'Trees'),   plotOptions = list(     showLegend = FALSE,     showPredictions = TRUE   )) visSbm(   x = mySbmModel,   labels = c(row = 'Fungus', col = 'Trees'),   directed = TRUE,   settings = list(     edge_threshold = 'default',     arrows = TRUE,     arrow_start = 'row'   ))"},{"path":[]},{"path":"https://theodore.vanrenterghem.io/shinySbm/articles/ShinySbmApp.html","id":"package-sbm","dir":"Articles","previous_headings":"","what":"shinySBM package","title":"shinySBM package","text":"Chiquet J, Donnet S, Barbillon P (2023). sbm: Stochastic Blockmodels. R package version 0.4.5, https://CRAN.R-project.org/package=sbm.","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/articles/ShinySbmApp.html","id":"the-demo-dataset","dir":"Articles","previous_headings":"","what":"shinySBM package","title":"shinySBM package","text":"Vacher, Corinne, Dominique Piou, Marie-Laure Desprez-Loustau. “Architecture antagonistic tree/fungus network: asymmetric influence past evolutionary history.” PloS one 3.3 (2008): e1740.","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Theodore Vanrenterghem. Maintainer, author. Julie Aubert. Author. Saint-Clair Chabert-Liddell. Author. großBM team. Contributor. Golem User. Copyright holder.","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Vanrenterghem T, Aubert J, Chabert-Liddell S (2023). shinySbm: 'shiny' Application Use Stochastic Block Model. R package version 0.1.5.","code":"@Manual{,   title = {shinySbm: 'shiny' Application to Use the Stochastic Block Model},   author = {Theodore Vanrenterghem and Julie Aubert and Saint-Clair Chabert-Liddell},   year = {2023},   note = {R package version 0.1.5}, }"},{"path":[]},{"path":"https://theodore.vanrenterghem.io/shinySbm/index.html","id":"on-shiny-migale","dir":"","previous_headings":"How to use the application","what":"On Shiny Migale","title":"shiny Application to Use the Stochastic Block Model","text":"want use shinySBM without code single line, app available Migale.","code":""},{"path":[]},{"path":"https://theodore.vanrenterghem.io/shinySbm/index.html","id":"installation","dir":"","previous_headings":"How to use the application > With R","what":"Installation","title":"shiny Application to Use the Stochastic Block Model","text":"can install development version shinySbm like : shinySbm package installed.","code":"install.packages(\"shinySbm\")"},{"path":"https://theodore.vanrenterghem.io/shinySbm/index.html","id":"running-the-application","dir":"","previous_headings":"How to use the application > With R","what":"Running the application","title":"shiny Application to Use the Stochastic Block Model","text":"new R session run","code":"shinySbm::shinySbmApp()"},{"path":[]},{"path":"https://theodore.vanrenterghem.io/shinySbm/index.html","id":"installation-1","dir":"","previous_headings":"How to use the application > With docker","what":"Installation","title":"shiny Application to Use the Stochastic Block Model","text":"familiar docker, can also download docker image running command:","code":"docker pull registry.forgemia.inra.fr/theodore.vanrenterghem/shinysbm:latest"},{"path":"https://theodore.vanrenterghem.io/shinySbm/index.html","id":"running-the-application-1","dir":"","previous_headings":"How to use the application > With docker","what":"Running the application","title":"shiny Application to Use the Stochastic Block Model","text":"installed can run command launch app: browser find address http://localhost:3838/","code":"docker run -p 3838:3838 registry.forgemia.inra.fr/theodore.vanrenterghem/shinysbm:latest"},{"path":"https://theodore.vanrenterghem.io/shinySbm/index.html","id":"contact","dir":"","previous_headings":"","what":"Contact","title":"shiny Application to Use the Stochastic Block Model","text":"questions, problems comments regarding application ? Contact us: shiny.sbm.dev@gmail.com","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"shiny Application to Use the Stochastic Block Model","text":"Chiquet J, Donnet S, Barbillon P (2023). sbm: Stochastic Blockmodels. R package version 0.4.5,https://CRAN.R-project.org/package=sbm.","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/FungusTreeNetwork.html","id":null,"dir":"Reference","previous_headings":"","what":"FungusTreeNetwork — FungusTreeNetwork","title":"FungusTreeNetwork — FungusTreeNetwork","text":"fungus-tree interaction network data set provides information $154$ fungi sampled $51$ tree species. Composed nodes edges lists build based `sbm` data package.","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/FungusTreeNetwork.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FungusTreeNetwork — FungusTreeNetwork","text":"","code":"FungusTreeNetwork"},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/FungusTreeNetwork.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"FungusTreeNetwork — FungusTreeNetwork","text":"list following entries: networks  tree_names: (character) tree names fungus_names: (character) fungus names tree_tree nodes: data.frame describing nodes tree_tree network edges: data.frame describing edges tree_tree network type: network \"unipartite\" fungus_tree nodes: data.frame describing nodes fungus_tree network edges: data.frame describing edges fungus_tree network type: network \"bipartite\"  sbmResults  tree_treeResults estimateSimpleSBM sbm      applied tree_tree data Poisson model. fungus_treeResults estimateBipartiteSBM sbm      applied fungus_tree data Bernoulli model.","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/FungusTreeNetwork.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"FungusTreeNetwork — FungusTreeNetwork","text":"Vacher, Corinne, Dominique Piou, Marie-Laure Desprez-Loustau. \"Architecture antagonistic tree/fungus network: asymmetric influence past evolutionary history.\" PloS one 3.3 (2008): e1740.","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/get_adjacency.default.html","id":null,"dir":"Reference","previous_headings":"","what":"get_adjacency.default — get_adjacency.default","title":"get_adjacency.default — get_adjacency.default","text":"fct build adjacency matrix list edges","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/get_adjacency.default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_adjacency.default — get_adjacency.default","text":"","code":"# S3 method for default get_adjacency(edges, type = c(\"unipartite\", \"bipartite\"), directed = FALSE)"},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/get_adjacency.default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_adjacency.default — get_adjacency.default","text":"edges Can table list pair nodes (nodes ids one two first columns) numerical third column can associated connections values. type network type can `'bipartite'` `'unipartite'` directed whether connections directed (`TRUE`) symmetrical (`FALSE`) (default set `TRUE`)","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/get_adjacency.default.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_adjacency.default — get_adjacency.default","text":"adjacency/incidence matrix (data.frame) representing network","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/get_adjacency.default.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get_adjacency.default — get_adjacency.default","text":"","code":"# For unipartite network data_uni <- FungusTreeNetwork$networks$tree_tree  # If the network is symmetric: my_mat <- get_adjacency(data_uni$edges,   type = data_uni$type,   directed = FALSE ) # If the network is directed: my_mat <- get_adjacency(data_uni$edges,   type = data_uni$type,   directed = TRUE )  # For bipartite network data_bi <- FungusTreeNetwork$networks$fungus_tree  my_mat <- get_adjacency(data_bi$edges, type = data_bi$type)  # In any case with a 2 columns data.frames the network is considered binary and each line is a 1. binary_net <- FungusTreeNetwork$fungus_tree$edges[, -3]  my_mat <- get_adjacency(binary_net, type = data_bi$type) #> Warning: edges should be a table of 2 or 3 columns"},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/get_adjacency.html","id":null,"dir":"Reference","previous_headings":"","what":"get_adjacency — get_adjacency","title":"get_adjacency — get_adjacency","text":"fct build adjacency matrix list edges.","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/get_adjacency.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_adjacency — get_adjacency","text":"","code":"get_adjacency(edges, type = c(\"unipartite\", \"bipartite\"), directed = FALSE)"},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/get_adjacency.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_adjacency — get_adjacency","text":"edges Can table list pair nodes (nodes ids one two first columns) numerical third column can associated connections values. type network type can `'bipartite'` `'unipartite'` directed whether connections directed (`TRUE`) symmetrical (`FALSE`) (default set `TRUE`)","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/get_adjacency.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_adjacency — get_adjacency","text":"adjacency/incidence matrix (data.frame) representing network","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/get_adjacency.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get_adjacency — get_adjacency","text":"","code":"# For unipartite network data_uni <- FungusTreeNetwork$networks$tree_tree  # If the network is symmetric: my_mat <- get_adjacency(data_uni$edges,   type = data_uni$type,   directed = FALSE ) # If the network is directed: my_mat <- get_adjacency(data_uni$edges,   type = data_uni$type,   directed = TRUE )  # For bipartite network data_bi <- FungusTreeNetwork$networks$fungus_tree  my_mat <- get_adjacency(data_bi$edges, type = data_bi$type)  # In any case with a 2 columns data.frames the network is considered binary and each line is a 1. binary_net <- FungusTreeNetwork$fungus_tree$edges[, -3]  my_mat <- get_adjacency(binary_net, type = data_bi$type) #> Warning: edges should be a table of 2 or 3 columns"},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/get_block.BipartiteSBM_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"get_block.BipartiteSBM_fit method — get_block.BipartiteSBM_fit","title":"get_block.BipartiteSBM_fit method — get_block.BipartiteSBM_fit","text":"fct return blocks attribution probabilities nodes Sbm fit sbm package.","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/get_block.BipartiteSBM_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_block.BipartiteSBM_fit method — get_block.BipartiteSBM_fit","text":"","code":"# S3 method for BipartiteSBM_fit get_block(   x,   labels = \"default\",   node_names = NULL,   attribution = TRUE,   proportion = FALSE )"},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/get_block.BipartiteSBM_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_block.BipartiteSBM_fit method — get_block.BipartiteSBM_fit","text":"x Sbm model class `BipartiteSBM_fit`. labels labels nodes. simple sbm single character (\"default\" -> c(\"nodes\")). sbm bipartite named character (names row col) (\"default\" -> c(row = 'row', col = 'col')). node_names named list (\"row\",\"col\"), row character vector containing names nodes rows, respectively columns attribution Boolean indicating whether produced tables contain block attribution column. column shows block nodes likely . proportion Boolean indicating whether produced tables contain probabilities belong blocks. columns shows every nodes every blocks probabilities node belong block.","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/get_block.BipartiteSBM_fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_block.BipartiteSBM_fit method — get_block.BipartiteSBM_fit","text":"list containing two data.frames block attributions /proportions one row blocks one column blocks","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/get_block.BipartiteSBM_fit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get_block.BipartiteSBM_fit method — get_block.BipartiteSBM_fit","text":"","code":"# my_sbm_bi <- sbm::estimateBipartiteSBM(sbm::fungusTreeNetwork$fungus_tree, #                                        model = 'bernoulli') my_sbm_bi <- FungusTreeNetwork$sbmResults$fungus_tree  node_names_bi <- list(   row = FungusTreeNetwork$networks$fungus_names,   col = FungusTreeNetwork$networks$tree_names )  my_blocks_bi <- get_block(my_sbm_bi,   labels = c(row = \"Fungus\", col = \"Tree\"),   node_names = node_names_bi ) my_blocks_bi$row #>                                                                    Nodes_names #> 1                                                       Amphiporthe leiphaemia #> 2                                                       Apiognomonia errabunda #> 3                                                          Apiognomonia veneta #> 4                                                        Armillaria cepistipes #> 5                                                           Armillaria gallica #> 6                                                            Armillaria mellea #> 7                                                           Armillaria ostoyae #> 8                                                              Asteroma tiliae #> 9                                 Biscogniauxia mediterranea var. mediterranea #> 10                                                          Bjerkandera adusta #> 11                                                          Blumeriella jaapii #> 12    Botrytis cinerea (grouped with Botryotinia fuckeliana (anamorphic type)) #> 13                                                     Botryosphaeria dothidea #> 14                                                    Botryosphaeria stevensii #> 15                                                           Caliciopsis pinea #> 16                                                      Cenangium ferruginosum #> 17                                                            Ceratocystis ips #> 18                                                          Ceratocystis minor #> 19                                                        Ceratocystis platani #> 20                                                    Chondrostereum purpureum #> 21                                                          Chrysomyxa abietis #> 22                                            Chrysomyxa ledi var. rhododendri #> 23                        Coleosporium tussilaginis f.sp. senecionis-silvatici #> 24                                                           Colpoma quercinum #> 25                                                   Cristulariella depraedans #> 26                                                        Cronartium flaccidum #> 27                                                         Cronartium quercuum #> 28                                                         Cronartium ribicola #> 29                                                       Crumenulopsis sororia #> 30                                                    Cryptodiaporthe castanea #> 31                                                      Cryptostroma corticale #> 32                                                     Cryptodiaporthe hystrix #> 33                                                    Cryphonectria parasitica #> 34                                                     Cryptodiaporthe populea #> 35                                                           Cyclaneusma minus #> 36                                                          Cyclaneusma niveum #> 37                                                      Cylindrocarpon didymum #> 38                                                     Daedaleopsis confragosa #> 39                                                         Delphinella abietis #> 40                                                           Dicarpella dryina #> 41                                                           Discella castanea #> 42                                                  Drepanopeziza punctiformis #> 43                                                           Entoleuca mammata #> 44                                                                 Eutypa lata #> 45                                                          Fistulina hepatica #> 46                                                           Fomes fomentarius #> 47                                                         Fomitopsis cytisina #> 48                                                         Fomitopsis pinicola #> 49                                                          Fusarium oxysporum #> 50                                                          Fusicoccum quercus #> 51                                                         Ganoderma adspersum #> 52                                                        Ganoderma applanatum #> 53                                                        Ganoderma resinaceum #> 54                                                         Gnomonia leptostyla #> 55                                                       Gremmeniella abietina #> 56                                                            Gymnopus fusipes #> 57                                                 Haematonectria haematococca #> 58                                                       Herpotrichia juniperi #> 59                                                      Heterobasidion annosum #> 60                                                        Hypoxylon fragiforme #> 61                                                      Lachnellula willkommii #> 62                                                       Laetiporus sulphureus #> 63                                                    Leptographium lundbergii #> 64                                                      Leptographium procerum #> 65                                                        Leucostoma persoonii #> 66                                                           Lirula macrospora #> 67                                         Lirula nervisequia var. nervisequia #> 68                                                      Lophodermium conigenum #> 69                                                         Lophodermium piceae #> 70                                                       Lophodermium pinastri #> 71                                                     Lophodermium seditiosum #> 72                                                   Melampsora allii-populina #> 73                                             Melampsorella caryophyllacearum #> 74                                                 Melampsora laricis-populina #> 75                                                          Melanconis modonia #> 76                                                         Melampsora populnea #> 77                                                         Meripilus giganteus #> 78                                                    Microsphaera alphitoides #> 79                                                       Microstroma juglandis #> 80                                                      Monochaetia monochaeta #> 81                                                 Mycosphaerella castaneicola #> 82                                                   Mycosphaerella dearnessii #> 83                                                    Mycosphaerella microsora #> 84                                                         Mycosphaerella pini #> 85                                                         Nectria cinnabarina #> 86  Nectria coccinea (grouped with Cylindocarpon candidum (teleomorphic type)) #> 87                                                           Nectria ditissima #> 88                                                          Nectria fuckeliana #> 89                                                        Nectria veuillotiana #> 90                                                        Neonectria galligena #> 91                                                           Ophiostoma piceae #> 92                                                          Ophiostoma serpens #> 93                         Ophiostoma ulmi (grouped with Ophiostoma novo-ulmi) #> 94                                                        Oudemansiella mucida #> 95                                                          Oxyporus populinus #> 96                                                      Pestalotiopsis funerea #> 97                                                         Pezicula cinnamomea #> 98                                                       Phacidium coniferarum #> 99                                                   Phaeocryptopus gaeumannii #> 100                                                      Phaeolus schweinitzii #> 101                                                       Phellinus chrysoloma #> 102                                                         Phellinus hartigii #> 103                                                        Phellinus igniarius #> 104                                                             Phellinus pini #> 105                                                         Phellinus robustus #> 106                                                         Phloeospora aceris #> 107                                                     Phomopsis juniperivora #> 108                                                        Phomopsis quercella #> 109                                                        Phyllosticta aceris #> 110                                                       Phyllactinia guttata #> 111                                                        Pleurotus ostreatus #> 112                                                  Pleuroceras pseudoplatani #> 113                                    Podosphaera clandestina var. aucupariae #> 114                                                          Pollaccia radiosa #> 115                                                        Polyporus squamosus #> 116                                                    Pseudoinonotus dryadeus #> 117                                                     Pucciniastrum epilobii #> 118                                                   Rhabdocline pseudotsugae #> 119                                                    Rhizosphaera kalkhoffii #> 120                                                    Rhizosphaera macrospora #> 121                                                    Rhizosphaera oudemansii #> 122                                                           Rhizina undulata #> 123                                                          Rhytisma acerinum #> 124                                                        Rosellinia necatrix #> 125                                                              Sarea resinae #> 126                                                          Sawadaea tulasnei #> 127                                                      Schizophyllum commune #> 128                                                        Seiridium cardinale #> 129                                                      Septotis podophyllina #> 130                                                        Septoria quercicola #> 131                                                     Sirococcus strobilinus #> 132                                                           Sparassis crispa #> 133                                                        Sphaeropsis sapinea #> 134                                                    Stegonsporium pyriforme #> 135                                                           Stereum hirsutum #> 136                                                     Stereum sanguinolentum #> 137                                                        Stigmina carpophila #> 138                                                          Sydowia polyspora #> 139                                                          Taphrina betulina #> 140                                                      Taphrina caerulescens #> 141                                                            Taphrina cerasi #> 142                                                          Taphrina populina #> 143                                                     Titaeosporina tremulae #> 144                                                           Trametes gibbosa #> 145                                                        Trametes versicolor #> 146                                                       Truncatella hartigii #> 147                                                              Valsa ambiens #> 148                                                               Valsa kunzei #> 149                                                                Valsa nivea #> 150                                                              Valsa sordida #> 151                                                           Venturia fraxini #> 152                                                        Venturia inaequalis #> 153                                                       Verticillium dahliae #> 154                                                      Zythiostroma pinastri #>       Blocks #> 1   Fungus_B #> 2   Fungus_B #> 3   Fungus_B #> 4   Fungus_B #> 5   Fungus_B #> 6   Fungus_B #> 7   Fungus_B #> 8   Fungus_B #> 9   Fungus_B #> 10  Fungus_B #> 11  Fungus_B #> 12  Fungus_B #> 13  Fungus_B #> 14  Fungus_B #> 15  Fungus_B #> 16  Fungus_B #> 17  Fungus_B #> 18  Fungus_B #> 19  Fungus_B #> 20  Fungus_B #> 21  Fungus_B #> 22  Fungus_B #> 23  Fungus_B #> 24  Fungus_B #> 25  Fungus_B #> 26  Fungus_B #> 27  Fungus_B #> 28  Fungus_B #> 29  Fungus_B #> 30  Fungus_B #> 31  Fungus_B #> 32  Fungus_B #> 33  Fungus_B #> 34  Fungus_B #> 35  Fungus_B #> 36  Fungus_B #> 37  Fungus_B #> 38  Fungus_B #> 39  Fungus_B #> 40  Fungus_B #> 41  Fungus_B #> 42  Fungus_B #> 43  Fungus_B #> 44  Fungus_B #> 45  Fungus_B #> 46  Fungus_B #> 47  Fungus_B #> 48  Fungus_B #> 49  Fungus_B #> 50  Fungus_B #> 51  Fungus_B #> 52  Fungus_B #> 53  Fungus_B #> 54  Fungus_B #> 55  Fungus_B #> 56  Fungus_B #> 57  Fungus_B #> 58  Fungus_B #> 59  Fungus_B #> 60  Fungus_B #> 61  Fungus_B #> 62  Fungus_B #> 63  Fungus_B #> 64  Fungus_B #> 65  Fungus_B #> 66  Fungus_B #> 67  Fungus_B #> 68  Fungus_B #> 69  Fungus_B #> 70  Fungus_B #> 71  Fungus_B #> 72  Fungus_B #> 73  Fungus_B #> 74  Fungus_B #> 75  Fungus_B #> 76  Fungus_B #> 77  Fungus_B #> 78  Fungus_B #> 79  Fungus_B #> 80  Fungus_B #> 81  Fungus_B #> 82  Fungus_B #> 83  Fungus_B #> 84  Fungus_B #> 85  Fungus_B #> 86  Fungus_B #> 87  Fungus_B #> 88  Fungus_B #> 89  Fungus_B #> 90  Fungus_B #> 91  Fungus_B #> 92  Fungus_B #> 93  Fungus_B #> 94  Fungus_B #> 95  Fungus_B #> 96  Fungus_B #> 97  Fungus_B #> 98  Fungus_B #> 99  Fungus_B #> 100 Fungus_B #> 101 Fungus_B #> 102 Fungus_B #> 103 Fungus_B #> 104 Fungus_B #> 105 Fungus_B #> 106 Fungus_B #> 107 Fungus_B #> 108 Fungus_B #> 109 Fungus_B #> 110 Fungus_B #> 111 Fungus_B #> 112 Fungus_B #> 113 Fungus_B #> 114 Fungus_B #> 115 Fungus_B #> 116 Fungus_B #> 117 Fungus_B #> 118 Fungus_B #> 119 Fungus_B #> 120 Fungus_B #> 121 Fungus_B #> 122 Fungus_B #> 123 Fungus_B #> 124 Fungus_B #> 125 Fungus_B #> 126 Fungus_B #> 127 Fungus_B #> 128 Fungus_B #> 129 Fungus_B #> 130 Fungus_B #> 131 Fungus_B #> 132 Fungus_B #> 133 Fungus_B #> 134 Fungus_B #> 135 Fungus_B #> 136 Fungus_B #> 137 Fungus_B #> 138 Fungus_B #> 139 Fungus_B #> 140 Fungus_B #> 141 Fungus_B #> 142 Fungus_B #> 143 Fungus_B #> 144 Fungus_B #> 145 Fungus_B #> 146 Fungus_B #> 147 Fungus_B #> 148 Fungus_B #> 149 Fungus_B #> 150 Fungus_B #> 151 Fungus_B #> 152 Fungus_B #> 153 Fungus_B #> 154 Fungus_B my_blocks_bi$col #>                                                                                             Nodes_names #> 1                                                                                            Abies alba #> 2                                                                                         Abies grandis #> 3                                                                                    Abies nordmanniana #> 4                                                  Large Maples (Acer platanoides, Acer pseudoplatanus) #> 5                        Small Maples (Acer campestre, Acer monspessulanum, Acer negundo, Acer opalus)  #> 6                                                                                       Alnus glutinosa #> 7                                                       Betulus spp (Betula pendula, Betula pubescens)  #> 8                                                                                      Carpinus betulus #> 9                                                                                       Castanea sativa #> 10                                                        Cedrus spp (Cedrus atlantica, Cedrus libani)  #> 11                                                                               Cupressus sempervirens #> 12                                                                                      Fagus silvatica #> 13                                            Fraxinus spp (Fraxinus angustifolia, Fraxinus excelsior)  #> 14                                                          Juglans spp (Juglans nigra, Juglans regia)  #> 15                                                                                        Larix decidua #> 16                                                                                      Larix kaempferi #> 17                                                                                        Picea excelsa #> 18                                                                                     Picea sitchensis #> 19                                                   Pinus brutia (Pinus brutia, Pinus brutia eldarica) #> 20                                                                                         Pinus cembra #> 21                                                                                     Pinus halepensis #> 22                                                                                  Pinus nigra laricio #> 23                                                                                    Pinus nigra nigra #> 24                                                                                       Pinus pinaster #> 25                                                                                          Pinus pinea #> 26                                                                                        Pinus radiata #> 27                                                                                        Pinus strobus #> 28                                                                                     Pinus sylvestris #> 29                                                                                          Pinus taeda #> 30                                                                                       Pinus uncinata #> 31                                                                                     Platanus hybrida #> 32 Cultivated Poplars (Populus trichocarpa, P. canescens, P.alba, P.nigra and their cultivated hybrids) #> 33                                                                                      Populus tremula #> 34                                                                                         Prunus avium #> 35                                                                                Pseudotsuga menziesii #> 36                                                                                         Quercus ilex #> 37                                                                                      Quercus petraea #> 38                                                                                    Quercus pubescens #> 39                                                                                    Quercus pyrenaica #> 40                                                                                        Quercus robur #> 41                                                                                        Quercus rubra #> 42                                                                                        Quercus suber #> 43                                                                                          Sorbus aria #> 44                                                                                     Sorbus aucuparia #> 45                                                                                     Sorbus domestica #> 46                                                                                    Sorbus torminalis #> 47                                                                                        Taxus baccata #> 48                                                                                        Thuja plicata #> 49                                                       Tilia spp (Tilia platiphyllos, Tilia cordata)  #> 50                                                                                   Tsuga heterophylla #> 51                                                 Ulmus spp (Ulmus minor, Ulmus laevis, Ulmus glabra)  #>    Blocks #> 1  Tree_B #> 2  Tree_B #> 3  Tree_B #> 4  Tree_B #> 5  Tree_B #> 6  Tree_B #> 7  Tree_B #> 8  Tree_B #> 9  Tree_B #> 10 Tree_B #> 11 Tree_B #> 12 Tree_B #> 13 Tree_B #> 14 Tree_B #> 15 Tree_B #> 16 Tree_B #> 17 Tree_B #> 18 Tree_B #> 19 Tree_B #> 20 Tree_B #> 21 Tree_B #> 22 Tree_B #> 23 Tree_B #> 24 Tree_B #> 25 Tree_B #> 26 Tree_B #> 27 Tree_B #> 28 Tree_B #> 29 Tree_B #> 30 Tree_B #> 31 Tree_B #> 32 Tree_B #> 33 Tree_B #> 34 Tree_B #> 35 Tree_B #> 36 Tree_B #> 37 Tree_B #> 38 Tree_B #> 39 Tree_B #> 40 Tree_B #> 41 Tree_B #> 42 Tree_B #> 43 Tree_B #> 44 Tree_B #> 45 Tree_B #> 46 Tree_B #> 47 Tree_B #> 48 Tree_B #> 49 Tree_B #> 50 Tree_B #> 51 Tree_B"},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/get_block.SimpleSBM_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"get_block.SimpleSBM_fit method — get_block.SimpleSBM_fit","title":"get_block.SimpleSBM_fit method — get_block.SimpleSBM_fit","text":"fct return blocks attribution probabilities nodes Sbm fit sbm package.","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/get_block.SimpleSBM_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_block.SimpleSBM_fit method — get_block.SimpleSBM_fit","text":"","code":"# S3 method for SimpleSBM_fit get_block(   x,   labels = \"default\",   node_names = NULL,   attribution = TRUE,   proportion = FALSE )"},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/get_block.SimpleSBM_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_block.SimpleSBM_fit method — get_block.SimpleSBM_fit","text":"x Sbm model class `SimpleSBM_fit`. labels labels nodes. simple sbm single character (\"default\" -> c(\"nodes\")). sbm bipartite named character (names row col) (\"default\" -> c(row = 'row', col = 'col')). node_names character: node names attribution Boolean indicating whether produced tables contain block attribution column. column shows block nodes likely . proportion Boolean indicating whether produced tables contain probabilities belong blocks. columns shows every nodes every blocks probabilities node belong block.","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/get_block.SimpleSBM_fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_block.SimpleSBM_fit method — get_block.SimpleSBM_fit","text":"data.frame block attributions /proportions","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/get_block.SimpleSBM_fit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get_block.SimpleSBM_fit method — get_block.SimpleSBM_fit","text":"","code":"# my_sbm_uni <- sbm::estimateSimpleSBM(sbm::fungusTreeNetwork$tree_tree, #                                      model = \"poisson\") my_sbm_uni <- FungusTreeNetwork$sbmResults$tree_tree  node_names_uni <- list(FungusTreeNetwork$networks$tree_names)  my_blocks_uni <- get_block(my_sbm_uni,   labels = c(\"Tree\"),   node_names = node_names_uni ) my_blocks_uni #>                                                                                             Nodes_names #> 1                                                                                            Abies alba #> 2                                                                                         Abies grandis #> 3                                                                                    Abies nordmanniana #> 4                                                  Large Maples (Acer platanoides, Acer pseudoplatanus) #> 5                        Small Maples (Acer campestre, Acer monspessulanum, Acer negundo, Acer opalus)  #> 6                                                                                       Alnus glutinosa #> 7                                                       Betulus spp (Betula pendula, Betula pubescens)  #> 8                                                                                      Carpinus betulus #> 9                                                                                       Castanea sativa #> 10                                                        Cedrus spp (Cedrus atlantica, Cedrus libani)  #> 11                                                                               Cupressus sempervirens #> 12                                                                                      Fagus silvatica #> 13                                            Fraxinus spp (Fraxinus angustifolia, Fraxinus excelsior)  #> 14                                                          Juglans spp (Juglans nigra, Juglans regia)  #> 15                                                                                        Larix decidua #> 16                                                                                      Larix kaempferi #> 17                                                                                        Picea excelsa #> 18                                                                                     Picea sitchensis #> 19                                                   Pinus brutia (Pinus brutia, Pinus brutia eldarica) #> 20                                                                                         Pinus cembra #> 21                                                                                     Pinus halepensis #> 22                                                                                  Pinus nigra laricio #> 23                                                                                    Pinus nigra nigra #> 24                                                                                       Pinus pinaster #> 25                                                                                          Pinus pinea #> 26                                                                                        Pinus radiata #> 27                                                                                        Pinus strobus #> 28                                                                                     Pinus sylvestris #> 29                                                                                          Pinus taeda #> 30                                                                                       Pinus uncinata #> 31                                                                                     Platanus hybrida #> 32 Cultivated Poplars (Populus trichocarpa, P. canescens, P.alba, P.nigra and their cultivated hybrids) #> 33                                                                                      Populus tremula #> 34                                                                                         Prunus avium #> 35                                                                                Pseudotsuga menziesii #> 36                                                                                         Quercus ilex #> 37                                                                                      Quercus petraea #> 38                                                                                    Quercus pubescens #> 39                                                                                    Quercus pyrenaica #> 40                                                                                        Quercus robur #> 41                                                                                        Quercus rubra #> 42                                                                                        Quercus suber #> 43                                                                                          Sorbus aria #> 44                                                                                     Sorbus aucuparia #> 45                                                                                     Sorbus domestica #> 46                                                                                    Sorbus torminalis #> 47                                                                                        Taxus baccata #> 48                                                                                        Thuja plicata #> 49                                                       Tilia spp (Tilia platiphyllos, Tilia cordata)  #> 50                                                                                   Tsuga heterophylla #> 51                                                 Ulmus spp (Ulmus minor, Ulmus laevis, Ulmus glabra)  #>     Blocks #> 1  Tree_B1 #> 2  Tree_B1 #> 3  Tree_B3 #> 4  Tree_B2 #> 5  Tree_B4 #> 6  Tree_B4 #> 7  Tree_B6 #> 8  Tree_B6 #> 9  Tree_B4 #> 10 Tree_B1 #> 11 Tree_B5 #> 12 Tree_B2 #> 13 Tree_B2 #> 14 Tree_B2 #> 15 Tree_B1 #> 16 Tree_B3 #> 17 Tree_B1 #> 18 Tree_B3 #> 19 Tree_B5 #> 20 Tree_B5 #> 21 Tree_B3 #> 22 Tree_B1 #> 23 Tree_B3 #> 24 Tree_B1 #> 25 Tree_B5 #> 26 Tree_B5 #> 27 Tree_B3 #> 28 Tree_B1 #> 29 Tree_B5 #> 30 Tree_B3 #> 31 Tree_B5 #> 32 Tree_B2 #> 33 Tree_B6 #> 34 Tree_B2 #> 35 Tree_B1 #> 36 Tree_B4 #> 37 Tree_B2 #> 38 Tree_B4 #> 39 Tree_B6 #> 40 Tree_B2 #> 41 Tree_B2 #> 42 Tree_B4 #> 43 Tree_B4 #> 44 Tree_B6 #> 45 Tree_B6 #> 46 Tree_B2 #> 47 Tree_B6 #> 48 Tree_B6 #> 49 Tree_B4 #> 50 Tree_B5 #> 51 Tree_B6"},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/get_block.html","id":null,"dir":"Reference","previous_headings":"","what":"get_block generic — get_block","title":"get_block generic — get_block","text":"fct return blocks attribution probabilities nodes Sbm fit sbm package.","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/get_block.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_block generic — get_block","text":"","code":"get_block(   x,   labels = \"default\",   node_names = NULL,   attribution = TRUE,   proportion = FALSE )"},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/get_block.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_block generic — get_block","text":"x Sbm model class `BipartiteSBM_fit`, `SimpleSBM_fit`. labels labels nodes. simple sbm single character (\"default\" -> c(\"nodes\")). sbm bipartite named character (names row col) (\"default\" -> c(row = 'row', col = 'col')). node_names \"bipartite case\": named list (\"row\",\"col\"), row character vector containing names nodes rows, respectively columns \"unipartite case\": character: node names attribution Boolean indicating whether produced tables contain block attribution column. column shows block nodes likely . proportion Boolean indicating whether produced tables contain probabilities belong blocks. columns shows every nodes every blocks probabilities node belong block.","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/get_block.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_block generic — get_block","text":"\"bipartite case\": list containing two data.frames block attributions /proportions one row blocks one column blocks \"unipartite case\": data.frame block attributions /proportions","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/get_block.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get_block generic — get_block","text":"","code":"# my_sbm_bi <- sbm::estimateBipartiteSBM(sbm::fungusTreeNetwork$fungus_tree, #                                        model = 'bernoulli') my_sbm_bi <- FungusTreeNetwork$sbmResults$fungus_tree  node_names_bi <- list(   row = FungusTreeNetwork$networks$fungus_names,   col = FungusTreeNetwork$networks$tree_names )  my_blocks_bi <- get_block(my_sbm_bi,   labels = c(row = \"Fungus\", col = \"Tree\"),   node_names = node_names_bi ) my_blocks_bi$row #>                                                                    Nodes_names #> 1                                                       Amphiporthe leiphaemia #> 2                                                       Apiognomonia errabunda #> 3                                                          Apiognomonia veneta #> 4                                                        Armillaria cepistipes #> 5                                                           Armillaria gallica #> 6                                                            Armillaria mellea #> 7                                                           Armillaria ostoyae #> 8                                                              Asteroma tiliae #> 9                                 Biscogniauxia mediterranea var. mediterranea #> 10                                                          Bjerkandera adusta #> 11                                                          Blumeriella jaapii #> 12    Botrytis cinerea (grouped with Botryotinia fuckeliana (anamorphic type)) #> 13                                                     Botryosphaeria dothidea #> 14                                                    Botryosphaeria stevensii #> 15                                                           Caliciopsis pinea #> 16                                                      Cenangium ferruginosum #> 17                                                            Ceratocystis ips #> 18                                                          Ceratocystis minor #> 19                                                        Ceratocystis platani #> 20                                                    Chondrostereum purpureum #> 21                                                          Chrysomyxa abietis #> 22                                            Chrysomyxa ledi var. rhododendri #> 23                        Coleosporium tussilaginis f.sp. senecionis-silvatici #> 24                                                           Colpoma quercinum #> 25                                                   Cristulariella depraedans #> 26                                                        Cronartium flaccidum #> 27                                                         Cronartium quercuum #> 28                                                         Cronartium ribicola #> 29                                                       Crumenulopsis sororia #> 30                                                    Cryptodiaporthe castanea #> 31                                                      Cryptostroma corticale #> 32                                                     Cryptodiaporthe hystrix #> 33                                                    Cryphonectria parasitica #> 34                                                     Cryptodiaporthe populea #> 35                                                           Cyclaneusma minus #> 36                                                          Cyclaneusma niveum #> 37                                                      Cylindrocarpon didymum #> 38                                                     Daedaleopsis confragosa #> 39                                                         Delphinella abietis #> 40                                                           Dicarpella dryina #> 41                                                           Discella castanea #> 42                                                  Drepanopeziza punctiformis #> 43                                                           Entoleuca mammata #> 44                                                                 Eutypa lata #> 45                                                          Fistulina hepatica #> 46                                                           Fomes fomentarius #> 47                                                         Fomitopsis cytisina #> 48                                                         Fomitopsis pinicola #> 49                                                          Fusarium oxysporum #> 50                                                          Fusicoccum quercus #> 51                                                         Ganoderma adspersum #> 52                                                        Ganoderma applanatum #> 53                                                        Ganoderma resinaceum #> 54                                                         Gnomonia leptostyla #> 55                                                       Gremmeniella abietina #> 56                                                            Gymnopus fusipes #> 57                                                 Haematonectria haematococca #> 58                                                       Herpotrichia juniperi #> 59                                                      Heterobasidion annosum #> 60                                                        Hypoxylon fragiforme #> 61                                                      Lachnellula willkommii #> 62                                                       Laetiporus sulphureus #> 63                                                    Leptographium lundbergii #> 64                                                      Leptographium procerum #> 65                                                        Leucostoma persoonii #> 66                                                           Lirula macrospora #> 67                                         Lirula nervisequia var. nervisequia #> 68                                                      Lophodermium conigenum #> 69                                                         Lophodermium piceae #> 70                                                       Lophodermium pinastri #> 71                                                     Lophodermium seditiosum #> 72                                                   Melampsora allii-populina #> 73                                             Melampsorella caryophyllacearum #> 74                                                 Melampsora laricis-populina #> 75                                                          Melanconis modonia #> 76                                                         Melampsora populnea #> 77                                                         Meripilus giganteus #> 78                                                    Microsphaera alphitoides #> 79                                                       Microstroma juglandis #> 80                                                      Monochaetia monochaeta #> 81                                                 Mycosphaerella castaneicola #> 82                                                   Mycosphaerella dearnessii #> 83                                                    Mycosphaerella microsora #> 84                                                         Mycosphaerella pini #> 85                                                         Nectria cinnabarina #> 86  Nectria coccinea (grouped with Cylindocarpon candidum (teleomorphic type)) #> 87                                                           Nectria ditissima #> 88                                                          Nectria fuckeliana #> 89                                                        Nectria veuillotiana #> 90                                                        Neonectria galligena #> 91                                                           Ophiostoma piceae #> 92                                                          Ophiostoma serpens #> 93                         Ophiostoma ulmi (grouped with Ophiostoma novo-ulmi) #> 94                                                        Oudemansiella mucida #> 95                                                          Oxyporus populinus #> 96                                                      Pestalotiopsis funerea #> 97                                                         Pezicula cinnamomea #> 98                                                       Phacidium coniferarum #> 99                                                   Phaeocryptopus gaeumannii #> 100                                                      Phaeolus schweinitzii #> 101                                                       Phellinus chrysoloma #> 102                                                         Phellinus hartigii #> 103                                                        Phellinus igniarius #> 104                                                             Phellinus pini #> 105                                                         Phellinus robustus #> 106                                                         Phloeospora aceris #> 107                                                     Phomopsis juniperivora #> 108                                                        Phomopsis quercella #> 109                                                        Phyllosticta aceris #> 110                                                       Phyllactinia guttata #> 111                                                        Pleurotus ostreatus #> 112                                                  Pleuroceras pseudoplatani #> 113                                    Podosphaera clandestina var. aucupariae #> 114                                                          Pollaccia radiosa #> 115                                                        Polyporus squamosus #> 116                                                    Pseudoinonotus dryadeus #> 117                                                     Pucciniastrum epilobii #> 118                                                   Rhabdocline pseudotsugae #> 119                                                    Rhizosphaera kalkhoffii #> 120                                                    Rhizosphaera macrospora #> 121                                                    Rhizosphaera oudemansii #> 122                                                           Rhizina undulata #> 123                                                          Rhytisma acerinum #> 124                                                        Rosellinia necatrix #> 125                                                              Sarea resinae #> 126                                                          Sawadaea tulasnei #> 127                                                      Schizophyllum commune #> 128                                                        Seiridium cardinale #> 129                                                      Septotis podophyllina #> 130                                                        Septoria quercicola #> 131                                                     Sirococcus strobilinus #> 132                                                           Sparassis crispa #> 133                                                        Sphaeropsis sapinea #> 134                                                    Stegonsporium pyriforme #> 135                                                           Stereum hirsutum #> 136                                                     Stereum sanguinolentum #> 137                                                        Stigmina carpophila #> 138                                                          Sydowia polyspora #> 139                                                          Taphrina betulina #> 140                                                      Taphrina caerulescens #> 141                                                            Taphrina cerasi #> 142                                                          Taphrina populina #> 143                                                     Titaeosporina tremulae #> 144                                                           Trametes gibbosa #> 145                                                        Trametes versicolor #> 146                                                       Truncatella hartigii #> 147                                                              Valsa ambiens #> 148                                                               Valsa kunzei #> 149                                                                Valsa nivea #> 150                                                              Valsa sordida #> 151                                                           Venturia fraxini #> 152                                                        Venturia inaequalis #> 153                                                       Verticillium dahliae #> 154                                                      Zythiostroma pinastri #>       Blocks #> 1   Fungus_B #> 2   Fungus_B #> 3   Fungus_B #> 4   Fungus_B #> 5   Fungus_B #> 6   Fungus_B #> 7   Fungus_B #> 8   Fungus_B #> 9   Fungus_B #> 10  Fungus_B #> 11  Fungus_B #> 12  Fungus_B #> 13  Fungus_B #> 14  Fungus_B #> 15  Fungus_B #> 16  Fungus_B #> 17  Fungus_B #> 18  Fungus_B #> 19  Fungus_B #> 20  Fungus_B #> 21  Fungus_B #> 22  Fungus_B #> 23  Fungus_B #> 24  Fungus_B #> 25  Fungus_B #> 26  Fungus_B #> 27  Fungus_B #> 28  Fungus_B #> 29  Fungus_B #> 30  Fungus_B #> 31  Fungus_B #> 32  Fungus_B #> 33  Fungus_B #> 34  Fungus_B #> 35  Fungus_B #> 36  Fungus_B #> 37  Fungus_B #> 38  Fungus_B #> 39  Fungus_B #> 40  Fungus_B #> 41  Fungus_B #> 42  Fungus_B #> 43  Fungus_B #> 44  Fungus_B #> 45  Fungus_B #> 46  Fungus_B #> 47  Fungus_B #> 48  Fungus_B #> 49  Fungus_B #> 50  Fungus_B #> 51  Fungus_B #> 52  Fungus_B #> 53  Fungus_B #> 54  Fungus_B #> 55  Fungus_B #> 56  Fungus_B #> 57  Fungus_B #> 58  Fungus_B #> 59  Fungus_B #> 60  Fungus_B #> 61  Fungus_B #> 62  Fungus_B #> 63  Fungus_B #> 64  Fungus_B #> 65  Fungus_B #> 66  Fungus_B #> 67  Fungus_B #> 68  Fungus_B #> 69  Fungus_B #> 70  Fungus_B #> 71  Fungus_B #> 72  Fungus_B #> 73  Fungus_B #> 74  Fungus_B #> 75  Fungus_B #> 76  Fungus_B #> 77  Fungus_B #> 78  Fungus_B #> 79  Fungus_B #> 80  Fungus_B #> 81  Fungus_B #> 82  Fungus_B #> 83  Fungus_B #> 84  Fungus_B #> 85  Fungus_B #> 86  Fungus_B #> 87  Fungus_B #> 88  Fungus_B #> 89  Fungus_B #> 90  Fungus_B #> 91  Fungus_B #> 92  Fungus_B #> 93  Fungus_B #> 94  Fungus_B #> 95  Fungus_B #> 96  Fungus_B #> 97  Fungus_B #> 98  Fungus_B #> 99  Fungus_B #> 100 Fungus_B #> 101 Fungus_B #> 102 Fungus_B #> 103 Fungus_B #> 104 Fungus_B #> 105 Fungus_B #> 106 Fungus_B #> 107 Fungus_B #> 108 Fungus_B #> 109 Fungus_B #> 110 Fungus_B #> 111 Fungus_B #> 112 Fungus_B #> 113 Fungus_B #> 114 Fungus_B #> 115 Fungus_B #> 116 Fungus_B #> 117 Fungus_B #> 118 Fungus_B #> 119 Fungus_B #> 120 Fungus_B #> 121 Fungus_B #> 122 Fungus_B #> 123 Fungus_B #> 124 Fungus_B #> 125 Fungus_B #> 126 Fungus_B #> 127 Fungus_B #> 128 Fungus_B #> 129 Fungus_B #> 130 Fungus_B #> 131 Fungus_B #> 132 Fungus_B #> 133 Fungus_B #> 134 Fungus_B #> 135 Fungus_B #> 136 Fungus_B #> 137 Fungus_B #> 138 Fungus_B #> 139 Fungus_B #> 140 Fungus_B #> 141 Fungus_B #> 142 Fungus_B #> 143 Fungus_B #> 144 Fungus_B #> 145 Fungus_B #> 146 Fungus_B #> 147 Fungus_B #> 148 Fungus_B #> 149 Fungus_B #> 150 Fungus_B #> 151 Fungus_B #> 152 Fungus_B #> 153 Fungus_B #> 154 Fungus_B my_blocks_bi$col #>                                                                                             Nodes_names #> 1                                                                                            Abies alba #> 2                                                                                         Abies grandis #> 3                                                                                    Abies nordmanniana #> 4                                                  Large Maples (Acer platanoides, Acer pseudoplatanus) #> 5                        Small Maples (Acer campestre, Acer monspessulanum, Acer negundo, Acer opalus)  #> 6                                                                                       Alnus glutinosa #> 7                                                       Betulus spp (Betula pendula, Betula pubescens)  #> 8                                                                                      Carpinus betulus #> 9                                                                                       Castanea sativa #> 10                                                        Cedrus spp (Cedrus atlantica, Cedrus libani)  #> 11                                                                               Cupressus sempervirens #> 12                                                                                      Fagus silvatica #> 13                                            Fraxinus spp (Fraxinus angustifolia, Fraxinus excelsior)  #> 14                                                          Juglans spp (Juglans nigra, Juglans regia)  #> 15                                                                                        Larix decidua #> 16                                                                                      Larix kaempferi #> 17                                                                                        Picea excelsa #> 18                                                                                     Picea sitchensis #> 19                                                   Pinus brutia (Pinus brutia, Pinus brutia eldarica) #> 20                                                                                         Pinus cembra #> 21                                                                                     Pinus halepensis #> 22                                                                                  Pinus nigra laricio #> 23                                                                                    Pinus nigra nigra #> 24                                                                                       Pinus pinaster #> 25                                                                                          Pinus pinea #> 26                                                                                        Pinus radiata #> 27                                                                                        Pinus strobus #> 28                                                                                     Pinus sylvestris #> 29                                                                                          Pinus taeda #> 30                                                                                       Pinus uncinata #> 31                                                                                     Platanus hybrida #> 32 Cultivated Poplars (Populus trichocarpa, P. canescens, P.alba, P.nigra and their cultivated hybrids) #> 33                                                                                      Populus tremula #> 34                                                                                         Prunus avium #> 35                                                                                Pseudotsuga menziesii #> 36                                                                                         Quercus ilex #> 37                                                                                      Quercus petraea #> 38                                                                                    Quercus pubescens #> 39                                                                                    Quercus pyrenaica #> 40                                                                                        Quercus robur #> 41                                                                                        Quercus rubra #> 42                                                                                        Quercus suber #> 43                                                                                          Sorbus aria #> 44                                                                                     Sorbus aucuparia #> 45                                                                                     Sorbus domestica #> 46                                                                                    Sorbus torminalis #> 47                                                                                        Taxus baccata #> 48                                                                                        Thuja plicata #> 49                                                       Tilia spp (Tilia platiphyllos, Tilia cordata)  #> 50                                                                                   Tsuga heterophylla #> 51                                                 Ulmus spp (Ulmus minor, Ulmus laevis, Ulmus glabra)  #>    Blocks #> 1  Tree_B #> 2  Tree_B #> 3  Tree_B #> 4  Tree_B #> 5  Tree_B #> 6  Tree_B #> 7  Tree_B #> 8  Tree_B #> 9  Tree_B #> 10 Tree_B #> 11 Tree_B #> 12 Tree_B #> 13 Tree_B #> 14 Tree_B #> 15 Tree_B #> 16 Tree_B #> 17 Tree_B #> 18 Tree_B #> 19 Tree_B #> 20 Tree_B #> 21 Tree_B #> 22 Tree_B #> 23 Tree_B #> 24 Tree_B #> 25 Tree_B #> 26 Tree_B #> 27 Tree_B #> 28 Tree_B #> 29 Tree_B #> 30 Tree_B #> 31 Tree_B #> 32 Tree_B #> 33 Tree_B #> 34 Tree_B #> 35 Tree_B #> 36 Tree_B #> 37 Tree_B #> 38 Tree_B #> 39 Tree_B #> 40 Tree_B #> 41 Tree_B #> 42 Tree_B #> 43 Tree_B #> 44 Tree_B #> 45 Tree_B #> 46 Tree_B #> 47 Tree_B #> 48 Tree_B #> 49 Tree_B #> 50 Tree_B #> 51 Tree_B  # my_sbm_uni <- sbm::estimateSimpleSBM(sbm::fungusTreeNetwork$tree_tree, #                                      model = \"poisson\") my_sbm_uni <- FungusTreeNetwork$sbmResults$tree_tree  node_names_uni <- list(FungusTreeNetwork$networks$tree_names)  my_blocks_uni <- get_block(my_sbm_uni,   labels = c(\"Tree\"),   node_names = node_names_uni ) my_blocks_uni #>                                                                                             Nodes_names #> 1                                                                                            Abies alba #> 2                                                                                         Abies grandis #> 3                                                                                    Abies nordmanniana #> 4                                                  Large Maples (Acer platanoides, Acer pseudoplatanus) #> 5                        Small Maples (Acer campestre, Acer monspessulanum, Acer negundo, Acer opalus)  #> 6                                                                                       Alnus glutinosa #> 7                                                       Betulus spp (Betula pendula, Betula pubescens)  #> 8                                                                                      Carpinus betulus #> 9                                                                                       Castanea sativa #> 10                                                        Cedrus spp (Cedrus atlantica, Cedrus libani)  #> 11                                                                               Cupressus sempervirens #> 12                                                                                      Fagus silvatica #> 13                                            Fraxinus spp (Fraxinus angustifolia, Fraxinus excelsior)  #> 14                                                          Juglans spp (Juglans nigra, Juglans regia)  #> 15                                                                                        Larix decidua #> 16                                                                                      Larix kaempferi #> 17                                                                                        Picea excelsa #> 18                                                                                     Picea sitchensis #> 19                                                   Pinus brutia (Pinus brutia, Pinus brutia eldarica) #> 20                                                                                         Pinus cembra #> 21                                                                                     Pinus halepensis #> 22                                                                                  Pinus nigra laricio #> 23                                                                                    Pinus nigra nigra #> 24                                                                                       Pinus pinaster #> 25                                                                                          Pinus pinea #> 26                                                                                        Pinus radiata #> 27                                                                                        Pinus strobus #> 28                                                                                     Pinus sylvestris #> 29                                                                                          Pinus taeda #> 30                                                                                       Pinus uncinata #> 31                                                                                     Platanus hybrida #> 32 Cultivated Poplars (Populus trichocarpa, P. canescens, P.alba, P.nigra and their cultivated hybrids) #> 33                                                                                      Populus tremula #> 34                                                                                         Prunus avium #> 35                                                                                Pseudotsuga menziesii #> 36                                                                                         Quercus ilex #> 37                                                                                      Quercus petraea #> 38                                                                                    Quercus pubescens #> 39                                                                                    Quercus pyrenaica #> 40                                                                                        Quercus robur #> 41                                                                                        Quercus rubra #> 42                                                                                        Quercus suber #> 43                                                                                          Sorbus aria #> 44                                                                                     Sorbus aucuparia #> 45                                                                                     Sorbus domestica #> 46                                                                                    Sorbus torminalis #> 47                                                                                        Taxus baccata #> 48                                                                                        Thuja plicata #> 49                                                       Tilia spp (Tilia platiphyllos, Tilia cordata)  #> 50                                                                                   Tsuga heterophylla #> 51                                                 Ulmus spp (Ulmus minor, Ulmus laevis, Ulmus glabra)  #>     Blocks #> 1  Tree_B1 #> 2  Tree_B1 #> 3  Tree_B3 #> 4  Tree_B2 #> 5  Tree_B4 #> 6  Tree_B4 #> 7  Tree_B6 #> 8  Tree_B6 #> 9  Tree_B4 #> 10 Tree_B1 #> 11 Tree_B5 #> 12 Tree_B2 #> 13 Tree_B2 #> 14 Tree_B2 #> 15 Tree_B1 #> 16 Tree_B3 #> 17 Tree_B1 #> 18 Tree_B3 #> 19 Tree_B5 #> 20 Tree_B5 #> 21 Tree_B3 #> 22 Tree_B1 #> 23 Tree_B3 #> 24 Tree_B1 #> 25 Tree_B5 #> 26 Tree_B5 #> 27 Tree_B3 #> 28 Tree_B1 #> 29 Tree_B5 #> 30 Tree_B3 #> 31 Tree_B5 #> 32 Tree_B2 #> 33 Tree_B6 #> 34 Tree_B2 #> 35 Tree_B1 #> 36 Tree_B4 #> 37 Tree_B2 #> 38 Tree_B4 #> 39 Tree_B6 #> 40 Tree_B2 #> 41 Tree_B2 #> 42 Tree_B4 #> 43 Tree_B4 #> 44 Tree_B6 #> 45 Tree_B6 #> 46 Tree_B2 #> 47 Tree_B6 #> 48 Tree_B6 #> 49 Tree_B4 #> 50 Tree_B5 #> 51 Tree_B6"},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/get_flextable.html","id":null,"dir":"Reference","previous_headings":"","what":"get_flextable — get_flextable","title":"get_flextable — get_flextable","text":"fct build flextable sbm object","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/get_flextable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_flextable — get_flextable","text":"","code":"get_flextable(   sbm,   labels = \"default\",   type = c(\"blockProp\", \"connectParam\", \"storedModels\"),   settings = list() )"},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/get_flextable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_flextable — get_flextable","text":"sbm sbm model product sbm estimation (simple bipartite) labels labels nodes. simple sbm single character (\"default\" -> c(\"nodes\")). sbm bipartite named character (names row col) (\"default\" -> c(row = 'row', col = 'col')). type type table wanted. settings list settings","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/get_flextable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_flextable — get_flextable","text":"Return selected flextable","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/get_flextable.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"get_flextable — get_flextable","text":"Values type 'blockProp': gives block proportions. 'connectParam': gives block connectivity. 'storedModels': gives stored modems summary. list parameters settings flextable \"caption\": Caption flextable title (character) \"digits\": nb digits wanted shown table \"selected_col\": Color highlighting selected model \"best_col\": Color text best model","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/get_flextable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get_flextable — get_flextable","text":"Table 1: Block proportions Blocks Fungus Trees 1 0.03 0.11 2 0.06 0.20 3 0.32 0.25 4 0.59 0.44 Table 2: Connectivity betweens blocks   Trees   1 2 3 4 Fungus 1 0.96813 0.07754 0.84037 0.06756 2 0.52056 0.58440 0.23089 0.10793 3 0.32450 0.00362 0.09853 0.00578 4 0.01835 0.15433 0.00133 0.01922 New Title Nb row blocks Nb col blocks Total nb blocks ICL log-Likelihood Nb parameters 1 1 2 -1,978.98 -1,974.50 1 2 1 3 -1,839.18 -1,827.69 3 2 2 4 -1,721.53 -1,699.11 6 2 3 5 -1,705.15 -1,671.80 9 3 3 6 -1,670.17 -1,620.84 13 4 3 7 -1,652.33 -1,587.03 17 4 4 8 -1,641.48 -1,556.28 22 5 4 9 -1,651.74 -1,546.08 27 5 5 10 -1,662.93 -1,532.88 33 6 5 11 -1,680.76 -1,525.77 39 7 5 12 -1,703.21 -1,523.28 45 8 5 13 -1,724.53 -1,519.66 51 9 5 14 -1,751.54 -1,521.73 57","code":"# my_sbm <- sbm::estimateBipartiteSBM(sbm::fungusTreeNetwork$fungus_tree, #                                     model = 'bernoulli') my_sbm <- FungusTreeNetwork$sbmResults$fungus_tree  get_flextable(my_sbm,   labels = c(row = \"Fungus\", col = \"Trees\"),   type = \"blockProp\" ) .cl-a0c74552{}.cl-a0c2d15c{font-family:'DejaVu Sans';font-size:11pt;font-weight:bold;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-a0c2d166{font-family:'DejaVu Sans';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-a0c4c494{margin:0;text-align:right;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-a0c4d1f0{width:0.842in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a0c4d1fa{width:0.916in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a0c4d1fb{width:0.763in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a0c4d204{width:0.842in;background-color:transparent;vertical-align: middle;border-bottom: 0.75pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a0c4d205{width:0.916in;background-color:transparent;vertical-align: middle;border-bottom: 0.75pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a0c4d206{width:0.763in;background-color:transparent;vertical-align: middle;border-bottom: 0.75pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a0c4d207{width:0.842in;background-color:transparent;vertical-align: middle;border-bottom: 0.75pt solid rgba(102, 102, 102, 1.00);border-top: 0.75pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a0c4d20e{width:0.916in;background-color:transparent;vertical-align: middle;border-bottom: 0.75pt solid rgba(102, 102, 102, 1.00);border-top: 0.75pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a0c4d20f{width:0.763in;background-color:transparent;vertical-align: middle;border-bottom: 0.75pt solid rgba(102, 102, 102, 1.00);border-top: 0.75pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a0c4d210{width:0.842in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0.75pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a0c4d218{width:0.916in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0.75pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a0c4d219{width:0.763in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0.75pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}Table 1: Block proportionsBlocksFungusTrees10.030.1120.060.2030.320.2540.590.44 get_flextable(my_sbm,   labels = c(row = \"Fungus\", col = \"Trees\"),   type = \"connectParam\", settings = list(digits = 5) ) .cl-a0df7622{}.cl-a0db0f38{font-family:'DejaVu Sans';font-size:11pt;font-weight:bold;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-a0db0f42{font-family:'DejaVu Sans';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-a0dcdf02{margin:0;text-align:center;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-a0dcdf0c{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-a0dcdf0d{margin:0;text-align:right;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-a0dcdf16{margin:0;text-align:left;margin-right:auto;writing-mode: vertical-rl;transform: rotate(180deg);-ms-writing-mode:bt-lr;-webkit-writing-mode:vertical-rl;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-a0dceaec{width:0.43in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(102, 102, 102, 1.00);border-right: 0 solid rgba(102, 102, 102, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a0dceaf6{width:0.391in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(102, 102, 102, 1.00);border-right: 0 solid rgba(102, 102, 102, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a0dceb00{width:0.917in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a0dceb01{width:0.43in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a0dceb02{width:0.391in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a0dceb0a{width:0.917in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a0dceb0b{width:0.43in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a0dceb0c{width:0.391in;background-color:transparent;vertical-align: middle;border-bottom: 0.75pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a0dceb0d{width:0.917in;background-color:transparent;vertical-align: middle;border-bottom: 0.75pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a0dceb14{width:0.43in;background-color:transparent;vertical-align: middle;border-bottom: 0.75pt solid rgba(102, 102, 102, 1.00);border-top: 0.75pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a0dceb15{width:0.391in;background-color:transparent;vertical-align: middle;border-bottom: 0.75pt solid rgba(102, 102, 102, 1.00);border-top: 0.75pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a0dceb16{width:0.917in;background-color:transparent;vertical-align: middle;border-bottom: 0.75pt solid rgba(102, 102, 102, 1.00);border-top: 0.75pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a0dceb1e{width:0.43in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0.75pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a0dceb1f{width:0.391in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0.75pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a0dceb20{width:0.917in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0.75pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}Table 2: Connectivity betweens blocksTrees1234Fungus10.968130.077540.840370.0675620.520560.584400.230890.1079330.324500.003620.098530.0057840.018350.154330.001330.01922 get_flextable(my_sbm,   labels = \"default\",   type = \"storedModels\", settings = list(caption = \"New Title\") ) .cl-a0f655ea{}.cl-a0f0d6e2{font-family:'DejaVu Sans';font-size:11pt;font-weight:bold;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-a0f0d6f6{font-family:'DejaVu Sans';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-a0f0d6f7{font-family:'DejaVu Sans';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(255, 0, 0, 1.00);background-color:transparent;}.cl-a0f32cb2{margin:0;text-align:center;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-a0f32cbc{margin:0;text-align:right;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-a0f33bc6{width:1.725in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a0f33bd0{width:1.651in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a0f33bd1{width:1.822in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a0f33bda{width:1.021in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a0f33bdb{width:1.503in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a0f33be4{width:1.797in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a0f33be5{width:1.725in;background-color:transparent;vertical-align: middle;border-bottom: 0.75pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a0f33be6{width:1.651in;background-color:transparent;vertical-align: middle;border-bottom: 0.75pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a0f33bee{width:1.822in;background-color:transparent;vertical-align: middle;border-bottom: 0.75pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a0f33bef{width:1.021in;background-color:transparent;vertical-align: middle;border-bottom: 0.75pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a0f33bf0{width:1.503in;background-color:transparent;vertical-align: middle;border-bottom: 0.75pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a0f33bf8{width:1.797in;background-color:transparent;vertical-align: middle;border-bottom: 0.75pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a0f33bf9{width:1.725in;background-color:transparent;vertical-align: middle;border-bottom: 0.75pt solid rgba(102, 102, 102, 1.00);border-top: 0.75pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a0f33c02{width:1.651in;background-color:transparent;vertical-align: middle;border-bottom: 0.75pt solid rgba(102, 102, 102, 1.00);border-top: 0.75pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a0f33c03{width:1.822in;background-color:transparent;vertical-align: middle;border-bottom: 0.75pt solid rgba(102, 102, 102, 1.00);border-top: 0.75pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a0f33c0c{width:1.021in;background-color:transparent;vertical-align: middle;border-bottom: 0.75pt solid rgba(102, 102, 102, 1.00);border-top: 0.75pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a0f33c0d{width:1.503in;background-color:transparent;vertical-align: middle;border-bottom: 0.75pt solid rgba(102, 102, 102, 1.00);border-top: 0.75pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a0f33c16{width:1.797in;background-color:transparent;vertical-align: middle;border-bottom: 0.75pt solid rgba(102, 102, 102, 1.00);border-top: 0.75pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a0f33c17{width:1.725in;background-color:rgba(173, 216, 230, 1.00);vertical-align: middle;border-bottom: 0.75pt solid rgba(102, 102, 102, 1.00);border-top: 0.75pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a0f33c18{width:1.651in;background-color:rgba(173, 216, 230, 1.00);vertical-align: middle;border-bottom: 0.75pt solid rgba(102, 102, 102, 1.00);border-top: 0.75pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a0f33c19{width:1.822in;background-color:rgba(173, 216, 230, 1.00);vertical-align: middle;border-bottom: 0.75pt solid rgba(102, 102, 102, 1.00);border-top: 0.75pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a0f33c20{width:1.021in;background-color:rgba(173, 216, 230, 1.00);vertical-align: middle;border-bottom: 0.75pt solid rgba(102, 102, 102, 1.00);border-top: 0.75pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a0f33c21{width:1.503in;background-color:rgba(173, 216, 230, 1.00);vertical-align: middle;border-bottom: 0.75pt solid rgba(102, 102, 102, 1.00);border-top: 0.75pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a0f33c2a{width:1.797in;background-color:rgba(173, 216, 230, 1.00);vertical-align: middle;border-bottom: 0.75pt solid rgba(102, 102, 102, 1.00);border-top: 0.75pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a0f33c2b{width:1.725in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0.75pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a0f33c34{width:1.651in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0.75pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a0f33c35{width:1.822in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0.75pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a0f33c36{width:1.021in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0.75pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a0f33c3e{width:1.503in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0.75pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a0f33c3f{width:1.797in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0.75pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}New TitleNb of row blocksNb of col blocksTotal nb of blocksICLlog-LikelihoodNb of parameters112-1,978.98-1,974.501213-1,839.18-1,827.693224-1,721.53-1,699.116235-1,705.15-1,671.809336-1,670.17-1,620.8413437-1,652.33-1,587.0317448-1,641.48-1,556.2822549-1,651.74-1,546.08275510-1,662.93-1,532.88336511-1,680.76-1,525.77397512-1,703.21-1,523.28458513-1,724.53-1,519.66519514-1,751.54-1,521.7357"},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling `rhs(lhs)`.","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/plotSbm.BipartiteSBM_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"plotSbm.BipartiteSBM_fit Method — plotSbm.BipartiteSBM_fit","title":"plotSbm.BipartiteSBM_fit Method — plotSbm.BipartiteSBM_fit","text":"plotSbm method BipartiteSBM_fit object","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/plotSbm.BipartiteSBM_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plotSbm.BipartiteSBM_fit Method — plotSbm.BipartiteSBM_fit","text":"","code":"# S3 method for BipartiteSBM_fit plotSbm(   x,   ordered = FALSE,   transpose = FALSE,   labels = NULL,   plotOptions = list() )"},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/plotSbm.BipartiteSBM_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plotSbm.BipartiteSBM_fit Method — plotSbm.BipartiteSBM_fit","text":"x Sbm model class `\"BipartiteSBM_fit\"` ordered Boolean. Set TRUE matrix reordered (Default FALSE) transpose Boolean. Set TRUE invert columns rows flatten long matrix (Default FALSE) labels named list (names : `\"col\"` `\"row\"`) characters describing columns rows component (Default NULL) plotOptions list providing options. See details .","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/plotSbm.BipartiteSBM_fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plotSbm.BipartiteSBM_fit Method — plotSbm.BipartiteSBM_fit","text":"ggplot object corresponding matrix plot inside app. Groups network matrix organized blocks, small tiles individuals connections. big tiles red lines block connectivity","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/plotSbm.BipartiteSBM_fit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"plotSbm.BipartiteSBM_fit Method — plotSbm.BipartiteSBM_fit","text":"list parameters plotOptions matrix plot \"showValues\": Boolean. Set TRUE see real values. Default value TRUE \"showPredictions\": Boolean. Set TRUE see predicted values. Default value TRUE \"title\": Title characters. printed bottom matrix. Default value NULL \"colPred\": Color predicted values, small values transparent. Default value \"red\" \"colValue\": Color real values, small values close white. Default value \"black\" \"showLegend\": legend printed ? TRUE FALSE, default:  FALSE \"interactionName\": Name connection legend default: \"Connection\"","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/plotSbm.BipartiteSBM_fit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"plotSbm.BipartiteSBM_fit Method — plotSbm.BipartiteSBM_fit","text":"","code":"# my_sbm_bi <- sbm::estimateBipartiteSBM(sbm::fungusTreeNetwork$fungus_tree, #                                        model = 'bernoulli') my_sbm_bi <- FungusTreeNetwork$sbmResults$fungus_tree  plotSbm(my_sbm_bi,   ordered = TRUE, transpose = TRUE,   plotOptions = list(title = \"An example Matrix\") )"},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/plotSbm.SimpleSBM_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"plotSbm.SimpleSBM_fit Method — plotSbm.SimpleSBM_fit","title":"plotSbm.SimpleSBM_fit Method — plotSbm.SimpleSBM_fit","text":"plotSbm method SimpleSBM_fit object","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/plotSbm.SimpleSBM_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plotSbm.SimpleSBM_fit Method — plotSbm.SimpleSBM_fit","text":"","code":"# S3 method for SimpleSBM_fit plotSbm(   x,   ordered = FALSE,   transpose = FALSE,   labels = NULL,   plotOptions = list() )"},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/plotSbm.SimpleSBM_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plotSbm.SimpleSBM_fit Method — plotSbm.SimpleSBM_fit","text":"x Sbm model class `\"SimpleSBM_fit\"` ordered Boolean. Set TRUE matrix reordered (Default FALSE) transpose used method labels named list (names : `\"col\"` `\"row\"`) characters describing columns rows component (Default NULL) plotOptions list providing options. See details .","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/plotSbm.SimpleSBM_fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plotSbm.SimpleSBM_fit Method — plotSbm.SimpleSBM_fit","text":"ggplot object corresponding matrix plot inside app. Groups network matrix organized blocks, small tiles individuals connections. big tiles red lines block connectivity","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/plotSbm.SimpleSBM_fit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"plotSbm.SimpleSBM_fit Method — plotSbm.SimpleSBM_fit","text":"list parameters plotOptions matrix plot \"showValues\": Boolean. Set TRUE see real values. Default value TRUE \"showPredictions\": Boolean. Set TRUE see predicted values. Default value TRUE \"title\": Title characters. printed bottom matrix. Default value NULL \"colPred\": Color predicted values, small values transparent. Default value \"red\" \"colValue\": Color real values, small values close white. Default value \"black\" \"showLegend\": legend printed ? TRUE FALSE, default:  FALSE \"interactionName\": Name connection legend default: \"Connection\"","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/plotSbm.SimpleSBM_fit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"plotSbm.SimpleSBM_fit Method — plotSbm.SimpleSBM_fit","text":"","code":"# my_sbm_uni <- sbm::estimateSimpleSBM(sbm::fungusTreeNetwork$tree_tree, #                                      model = \"poisson\") my_sbm_uni <- FungusTreeNetwork$sbmResults$tree_tree  plotSbm(my_sbm_uni,   ordered = TRUE,   plotOptions = list(title = \"An example Matrix\") )"},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/plotSbm.default.html","id":null,"dir":"Reference","previous_headings":"","what":"plotSbm.default Method — plotSbm.default","title":"plotSbm.default Method — plotSbm.default","text":"plotSbm method unknown object","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/plotSbm.default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plotSbm.default Method — plotSbm.default","text":"","code":"# S3 method for default plotSbm(   x,   ordered = FALSE,   transpose = FALSE,   labels = NULL,   plotOptions = list() )"},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/plotSbm.default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plotSbm.default Method — plotSbm.default","text":"x object ordered used default method transpose used default method labels used default method plotOptions used default method","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/plotSbm.default.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plotSbm.default Method — plotSbm.default","text":"default plot x","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/plotSbm.html","id":null,"dir":"Reference","previous_headings":"","what":"plotSbm — plotSbm","title":"plotSbm — plotSbm","text":"fct plot beautiful matrix sbm object network matrix suitable parameters get wanted plots. generic function: one method Bipartite one Simple Sbm. `x` object need construct one `estimate***SBM` function `sbm` package.","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/plotSbm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plotSbm — plotSbm","text":"","code":"plotSbm(   x,   ordered = FALSE,   transpose = FALSE,   labels = NULL,   plotOptions = list() )"},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/plotSbm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plotSbm — plotSbm","text":"x Sbm model class `BipartiteSBM_fit`, `SimpleSBM_fit` simple numeric `matrix`. ordered Boolean. Set TRUE matrix reordered (Default FALSE) transpose Boolean. Set TRUE invert columns rows flatten long matrix (Default FALSE) labels named list (names : `\"col\"` `\"row\"`) characters describing columns rows component (Default NULL) plotOptions list providing options. See details .","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/plotSbm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plotSbm — plotSbm","text":"ggplot object corresponding matrix plot inside app. Groups network matrix organized blocks, small tiles individuals connections. big tiles red lines block connectivity","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/plotSbm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"plotSbm — plotSbm","text":"list parameters plotOptions matrix plot \"showValues\": Boolean. Set TRUE see real values. Default value TRUE \"showPredictions\": Boolean. Set TRUE see predicted values. Default value TRUE \"title\": Title characters. printed bottom matrix. Default value NULL \"colPred\": Color predicted values, small values transparent. Default value \"red\" \"colValue\": Color real values, small values close white. Default value \"black\" \"showLegend\": legend printed ? TRUE FALSE, default:  FALSE \"interactionName\": Name connection legend default: \"Connection\"","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/plotSbm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"plotSbm — plotSbm","text":"","code":"# my_sbm_bi <- sbm::estimateBipartiteSBM(sbm::fungusTreeNetwork$fungus_tree, #                                        model = 'bernoulli') my_sbm_bi <- FungusTreeNetwork$sbmResults$fungus_tree  plotSbm(my_sbm_bi,   ordered = TRUE, transpose = TRUE,   plotOptions = list(title = \"An example Matrix\") )    # my_sbm_uni <- sbm::estimateSimpleSBM(sbm::fungusTreeNetwork$tree_tree, #                                      model = \"poisson\") my_sbm_uni <- FungusTreeNetwork$sbmResults$tree_tree  plotSbm(my_sbm_uni,   ordered = TRUE,   plotOptions = list(title = \"An example Matrix\") )   n_col <- 100 n_row <- 90 mat <- matrix(sample(0:10, n_col * n_row, replace = TRUE), n_col, n_row) plotSbm(mat,   transpose = TRUE,   labels = list(col = \"Columns\", row = \"Rows\"),   plotOptions = list(colValue = \"blue\") )"},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/plotSbm.matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"plotSbm.matrix Method — plotSbm.matrix","title":"plotSbm.matrix Method — plotSbm.matrix","text":"plotSbm method matrix object","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/plotSbm.matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plotSbm.matrix Method — plotSbm.matrix","text":"","code":"# S3 method for matrix plotSbm(   x,   ordered = FALSE,   transpose = FALSE,   labels = NULL,   plotOptions = list() )"},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/plotSbm.matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plotSbm.matrix Method — plotSbm.matrix","text":"x numeric matrix ordered Boolean. Set TRUE matrix reordered (Default FALSE) transpose Boolean. Set TRUE invert columns rows flatten long matrix (Default FALSE) labels named list (names : `\"col\"` `\"row\"`) characters describing columns rows component (Default NULL) plotOptions list providing options. See details .","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/plotSbm.matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plotSbm.matrix Method — plotSbm.matrix","text":"ggplot object corresponding matrix plot inside app. 'sbm' information matrix describing network, matrix organized tiles showing individuals connections.","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/plotSbm.matrix.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"plotSbm.matrix Method — plotSbm.matrix","text":"list parameters plotOptions matrix plot \"showValues\": Boolean. Set TRUE see real values. Default value TRUE \"showPredictions\": Boolean. Set TRUE see predicted values. Default value TRUE \"title\": Title characters. printed bottom matrix. Default value NULL \"colPred\": Color predicted values, small values transparent. Default value \"red\" \"colValue\": Color real values, small values close white. Default value \"black\" \"showLegend\": legend printed ? TRUE FALSE, default:  FALSE \"interactionName\": Name connection legend default: \"Connection\"","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/plotSbm.matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"plotSbm.matrix Method — plotSbm.matrix","text":"","code":"n_col <- 100 n_row <- 90 mat <- matrix(sample(0:10, n_col * n_row, replace = TRUE), n_col, n_row) plotSbm(mat,   transpose = TRUE,   labels = list(col = \"Columns\", row = \"Rows\"),   plotOptions = list(colValue = \"blue\") )"},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/shinySbmApp.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the Shiny Application — shinySbmApp","title":"Run the Shiny Application — shinySbmApp","text":"Run Shiny Application","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/shinySbmApp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the Shiny Application — shinySbmApp","text":"","code":"shinySbmApp(   nbCore_control = TRUE,   console_verbosity = TRUE,   onStart = NULL,   options = list(launch.browser = TRUE),   enableBookmarking = NULL,   uiPattern = \"/\",   ... )"},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/shinySbmApp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run the Shiny Application — shinySbmApp","text":"nbCore_control Allow control number Cores running `sbm` console_verbosity boolean boolean console printing 'sbm' outputs onStart function called app actually run. needed shinyAppObj, since shinyAppDir case, global.R file can used purpose. options Named options passed runApp call (can following: \"port\", \"launch.browser\", \"host\", \"quiet\", \"display.mode\" \"test.mode\"). can also specify width height parameters provide hint embedding environment ideal height/width app. enableBookmarking Can one \"url\", \"server\", \"disable\". default value, NULL, respect setting previous calls  enableBookmarking(). See enableBookmarking() information bookmarking app. uiPattern regular expression applied GET request determine whether ui used handle request. Note entire request path must match regular expression order match considered successful. ... arguments pass golem_opts. See `?golem::get_golem_options` details.","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/shinySbmApp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run the Shiny Application — shinySbmApp","text":"return value, called launch 'shiny' application","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/visSbm.BipartiteSBM_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"visSbm — visSbm.BipartiteSBM_fit","title":"visSbm — visSbm.BipartiteSBM_fit","text":"fct plot visNetwork plot adjacency matrix Sbm fit sbm package.","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/visSbm.BipartiteSBM_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"visSbm — visSbm.BipartiteSBM_fit","text":"","code":"# S3 method for BipartiteSBM_fit visSbm(   x,   labels = \"default\",   node_names = NULL,   directed = \"default\",   settings = list() )"},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/visSbm.BipartiteSBM_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"visSbm — visSbm.BipartiteSBM_fit","text":"x Sbm model class `BipartiteSBM_fit`, `SimpleSBM_fit` simple numeric `matrix`. labels labels nodes. simple sbm single character (\"default\" -> c(\"nodes\")). sbm bipartite named character (names row col) (\"default\" -> c(row = 'row', col = 'col')). node_names NULL nothing specific, list nodes given graph get interactive nodes names showed clicking block. bipartite case named list: \"row\": character: node names rows \"col\": character: node names columns unipartite case single character vector containing nodes names (Default = NULL). directed Boolean indicating whether network directed default, asymmetrical matrix seen directed. settings list settings","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/visSbm.BipartiteSBM_fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"visSbm — visSbm.BipartiteSBM_fit","text":"visNetwork visual x object","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/visSbm.BipartiteSBM_fit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"visSbm — visSbm.BipartiteSBM_fit","text":"List parameters \"edge_threshold\": \"default\" erases many small edges can without isolating nodes (connection).  can also numeric value 0 1, relative (min max) filter small edges value \"edge_color\": character: color edges (default: \"lightblue\") \"arrows\": boolean: edges arrows \"arrow_thickness\": numeric: arrows size \"arrow_start\": character: \"row\" \"col\" labels value according row columns. arrow start selected value \"node_color\": named character: Bipartite case c(row = \"row_color\", col = \"col_color\"). Unipartite case c(\"node_color\") \"node_shape\": named character: Bipartite case c(row = \"row_shape\", col = \"col_shape\"). Unipartite case c(\"node_shape\"). Value visNetwork shape argument visEdges function (\"triangle\",\"dot\",\"square\",etc...) \"digits\": integer: number digits show numbers shown (default: 2)","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/visSbm.BipartiteSBM_fit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"visSbm — visSbm.BipartiteSBM_fit","text":"","code":"# my_sbm_bi <- sbm::estimateBipartiteSBM(sbm::fungusTreeNetwork$fungus_tree, #                                        model = 'bernoulli') my_sbm_bi <- FungusTreeNetwork$sbmResults$fungus_tree  node_names_bi <- list(   row = FungusTreeNetwork$networks$fungus_names,   col = FungusTreeNetwork$networks$tree_names )  visSbm(my_sbm_bi,   labels = c(row = \"Fungus\", col = \"Tree\"),   node_names = node_names_bi,   settings = list(     arrows = TRUE,     arrow_start = \"Fungus\",     node_color = c(row = \"pink\", col = \"green\"),     node_shape = c(row = \"dot\", col = \"square\")   ) )  {\"x\":{\"nodes\":{\"id\":[\"Fungus_B1\",\"Fungus_B2\",\"Fungus_B3\",\"Fungus_B4\",\"Tree_B1\",\"Tree_B2\",\"Tree_B3\",\"Tree_B4\"],\"label\":[\"Fungus_B1\",\"Fungus_B2\",\"Fungus_B3\",\"Fungus_B4\",\"Tree_B1\",\"Tree_B2\",\"Tree_B3\",\"Tree_B4\"],\"level\":[1,1,1,1,2,2,2,2],\"value\":[0.02655515826088811,0.05570334378875306,0.3166650752961646,0.6010764226541944,0.105049382765684,0.1963967949124021,0.2477304406832458,0.4508233816386681],\"group\":[\"row\",\"row\",\"row\",\"row\",\"col\",\"col\",\"col\",\"col\"],\"text\":[null,null,null,null,null,null,null,null],\"title\":[\"proportion = 0.03\",\"proportion = 0.06\",\"proportion = 0.32\",\"proportion = 0.59\",\"proportion = 0.11\",\"proportion = 0.2\",\"proportion = 0.25\",\"proportion = 0.44\"]},\"edges\":{\"from\":[\"Tree_B1\",\"Tree_B1\",\"Tree_B1\",\"Tree_B2\",\"Tree_B2\",\"Tree_B3\",\"Tree_B3\",\"Tree_B4\"],\"to\":[\"Fungus_B1\",\"Fungus_B2\",\"Fungus_B3\",\"Fungus_B2\",\"Fungus_B4\",\"Fungus_B1\",\"Fungus_B2\",\"Fungus_B2\"],\"value\":[0.9681347782826074,0.520558816802243,0.3245042726104004,0.584398216304718,0.1543344112708817,0.8403706566864549,0.2308939166855925,0.1079303842704209],\"title\":[\"connectivity = 0.97\",\"connectivity = 0.52\",\"connectivity = 0.32\",\"connectivity = 0.58\",\"connectivity = 0.15\",\"connectivity = 0.84\",\"connectivity = 0.23\",\"connectivity = 0.11\"]},\"nodesToDataframe\":true,\"edgesToDataframe\":true,\"options\":{\"width\":\"100%\",\"height\":\"100%\",\"nodes\":{\"shape\":\"dot\"},\"manipulation\":{\"enabled\":false},\"edges\":{\"arrows\":{\"from\":{\"enabled\":true,\"scaleFactor\":0.3}},\"arrowStrikethrough\":false,\"color\":\"lightblue\"},\"groups\":{\"row\":{\"color\":{\"background\":\"pink\",\"highlight\":{\"border\":\"black\",\"background\":\"pink\"}},\"shape\":\"dot\"},\"useDefaultGroups\":true,\"col\":{\"color\":{\"background\":\"green\",\"highlight\":{\"border\":\"black\",\"background\":\"green\"}},\"shape\":\"square\"}},\"physics\":{\"solver\":\"forceAtlas2Based\"},\"layout\":{\"hierarchical\":{\"enabled\":true}},\"interaction\":{\"keyboard\":true,\"zoomSpeed\":1}},\"groups\":[\"row\",\"col\"],\"width\":null,\"height\":400,\"idselection\":{\"enabled\":false},\"byselection\":{\"enabled\":false},\"main\":null,\"submain\":null,\"footer\":null,\"background\":\"rgba(0, 0, 0, 0)\",\"tooltipStay\":300,\"tooltipStyle\":\"position: fixed;visibility:hidden;padding: 5px;white-space: nowrap;font-family: verdana;font-size:14px;font-color:#000000;background-color: #f5f4ed;-moz-border-radius: 3px;-webkit-border-radius: 3px;border-radius: 3px;border: 1px solid #808074;box-shadow: 3px 3px 10px rgba(0, 0, 0, 0.2);\"},\"evals\":[],\"jsHooks\":[]}"},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/visSbm.SimpleSBM_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"visSbm — visSbm.SimpleSBM_fit","title":"visSbm — visSbm.SimpleSBM_fit","text":"fct plot visNetwork plot adjacency matrix Sbm fit sbm package.","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/visSbm.SimpleSBM_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"visSbm — visSbm.SimpleSBM_fit","text":"","code":"# S3 method for SimpleSBM_fit visSbm(   x,   labels = \"default\",   node_names = NULL,   directed = \"default\",   settings = list() )"},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/visSbm.SimpleSBM_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"visSbm — visSbm.SimpleSBM_fit","text":"x Sbm model class `BipartiteSBM_fit`, `SimpleSBM_fit` simple numeric `matrix`. labels labels nodes. simple sbm single character (\"default\" -> c(\"nodes\")). sbm bipartite named character (names row col) (\"default\" -> c(row = 'row', col = 'col')). node_names NULL nothing specific, list nodes given graph get interactive nodes names showed clicking block. bipartite case named list: \"row\": character: node names rows \"col\": character: node names columns unipartite case single character vector containing nodes names (Default = NULL). directed Boolean indicating whether network directed default, asymmetrical matrix seen directed. settings list settings","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/visSbm.SimpleSBM_fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"visSbm — visSbm.SimpleSBM_fit","text":"visNetwork visual x object","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/visSbm.SimpleSBM_fit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"visSbm — visSbm.SimpleSBM_fit","text":"List parameters \"edge_threshold\": \"default\" erases many small edges can without isolating nodes (connection).  can also numeric value 0 1, relative (min max) filter small edges value \"edge_color\": character: color edges (default: \"lightblue\") \"arrows\": boolean: edges arrows \"arrow_thickness\": numeric: arrows size \"arrow_start\": character: \"row\" \"col\" labels value according row columns. arrow start selected value \"node_color\": named character: Bipartite case c(row = \"row_color\", col = \"col_color\"). Unipartite case c(\"node_color\") \"node_shape\": named character: Bipartite case c(row = \"row_shape\", col = \"col_shape\"). Unipartite case c(\"node_shape\"). Value visNetwork shape argument visEdges function (\"triangle\",\"dot\",\"square\",etc...) \"digits\": integer: number digits show numbers shown (default: 2)","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/visSbm.SimpleSBM_fit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"visSbm — visSbm.SimpleSBM_fit","text":"","code":"# my_sbm_uni <- sbm::estimateSimpleSBM(sbm::fungusTreeNetwork$tree_tree, #                                      model = \"poisson\") my_sbm_uni <- FungusTreeNetwork$sbmResults$tree_tree  node_names_uni <- list(FungusTreeNetwork$networks$tree_names)  visSbm(my_sbm_uni,   labels = c(\"Tree\"),   node_names = node_names_uni,   settings = list(     edge_threshold = 0.01,     edge_color = \"grey\",     node_color = c(\"violet\")   ) )  {\"x\":{\"nodes\":{\"id\":[1,2,3,4,5,6],\"label\":[\"Tree_B1\",\"Tree_B2\",\"Tree_B3\",\"Tree_B4\",\"Tree_B5\",\"Tree_B6\"],\"value\":[0.1763561455710689,0.1957351033798733,0.13759822995346,0.1569771877622644,0.1569771877622644,0.1763561455710689],\"text\":[\"Tree_B1/newline/Abies alba/newline/Abies grandis/newline/Cedrus spp (Cedrus atlantica, Cedrus libani) /newline/Larix decidua/newline/Picea excelsa/newline/Pinus nigra laricio/newline/Pinus pinaster/newline/Pinus sylvestris/newline/Pseudotsuga menziesii\",\"Tree_B2/newline/Large Maples (Acer platanoides, Acer pseudoplatanus)/newline/Fagus silvatica/newline/Fraxinus spp (Fraxinus angustifolia, Fraxinus excelsior) /newline/Juglans spp (Juglans nigra, Juglans regia) /newline/Cultivated Poplars (Populus trichocarpa, P. canescens, P.alba, P.nigra and their cultivated hybrids)/newline/Prunus avium/newline/Quercus petraea/newline/Quercus robur/newline/Quercus rubra/newline/Sorbus torminalis\",\"Tree_B3/newline/Abies nordmanniana/newline/Larix kaempferi/newline/Picea sitchensis/newline/Pinus halepensis/newline/Pinus nigra nigra/newline/Pinus strobus/newline/Pinus uncinata\",\"Tree_B4/newline/Small Maples (Acer campestre, Acer monspessulanum, Acer negundo, Acer opalus) /newline/Alnus glutinosa/newline/Castanea sativa/newline/Quercus ilex/newline/Quercus pubescens/newline/Quercus suber/newline/Sorbus aria/newline/Tilia spp (Tilia platiphyllos, Tilia cordata) \",\"Tree_B5/newline/Cupressus sempervirens/newline/Pinus brutia (Pinus brutia, Pinus brutia eldarica)/newline/Pinus cembra/newline/Pinus pinea/newline/Pinus radiata/newline/Pinus taeda/newline/Platanus hybrida/newline/Tsuga heterophylla\",\"Tree_B6/newline/Betulus spp (Betula pendula, Betula pubescens) /newline/Carpinus betulus/newline/Populus tremula/newline/Quercus pyrenaica/newline/Sorbus aucuparia/newline/Sorbus domestica/newline/Taxus baccata/newline/Thuja plicata/newline/Ulmus spp (Ulmus minor, Ulmus laevis, Ulmus glabra) \"],\"title\":[\"proportion = 0.18\",\"proportion = 0.2\",\"proportion = 0.14\",\"proportion = 0.16\",\"proportion = 0.16\",\"proportion = 0.16\"]},\"edges\":{\"from\":[1,1,1,1,1,1,2,2,2,2,2,3,3,3,3,4,4,4,5,5,6],\"to\":[1,2,3,4,5,6,2,3,4,5,6,3,4,5,6,4,5,6,5,6,6],\"value\":[9.028626982748953,3.291035476917589,6.047274425567874,1.068502701925505,1.854642119114858,0.1106257221035275,5.964601995845185,1.336375651865549,2.176100681975297,0.4999912342506725,0.2654770314593576,3.940659139660687,0.4026345835501051,1.462456490113269,0.07080814030998535,0.8216637437120358,0.1408933246030764,0.07793390866285368,0.5412140640437284,0.02263218251652199,0.02940543449865804],\"title\":[\"connectivity = 9.03\",\"connectivity = 3.29\",\"connectivity = 6.05\",\"connectivity = 1.07\",\"connectivity = 1.85\",\"connectivity = 0.11\",\"connectivity = 5.96\",\"connectivity = 1.34\",\"connectivity = 2.18\",\"connectivity = 0.5\",\"connectivity = 0.27\",\"connectivity = 3.94\",\"connectivity = 0.4\",\"connectivity = 1.46\",\"connectivity = 0.07\",\"connectivity = 0.82\",\"connectivity = 0.14\",\"connectivity = 0.08\",\"connectivity = 0.54\",\"connectivity = 0.02\",\"connectivity = 0.03\"]},\"nodesToDataframe\":true,\"edgesToDataframe\":true,\"options\":{\"width\":\"100%\",\"height\":\"100%\",\"nodes\":{\"shape\":\"dot\",\"color\":{\"background\":\"violet\",\"highlight\":{\"border\":\"black\",\"background\":\"violet\"}}},\"manipulation\":{\"enabled\":false},\"edges\":{\"arrows\":[],\"arrowStrikethrough\":false,\"color\":\"grey\"},\"physics\":{\"solver\":\"forceAtlas2Based\"},\"interaction\":{\"keyboard\":true,\"zoomSpeed\":1}},\"groups\":null,\"width\":null,\"height\":400,\"idselection\":{\"enabled\":false},\"byselection\":{\"enabled\":false},\"main\":null,\"submain\":null,\"footer\":null,\"background\":\"rgba(0, 0, 0, 0)\",\"tooltipStay\":300,\"tooltipStyle\":\"position: fixed;visibility:hidden;padding: 5px;white-space: nowrap;font-family: verdana;font-size:14px;font-color:#000000;background-color: #f5f4ed;-moz-border-radius: 3px;-webkit-border-radius: 3px;border-radius: 3px;border: 1px solid #808074;box-shadow: 3px 3px 10px rgba(0, 0, 0, 0.2);\"},\"evals\":[],\"jsHooks\":[]}"},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/visSbm.default.html","id":null,"dir":"Reference","previous_headings":"","what":"visSbm — visSbm.default","title":"visSbm — visSbm.default","text":"fct plot visNetwork plot adjacency matrix Sbm fit sbm package.","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/visSbm.default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"visSbm — visSbm.default","text":"","code":"# S3 method for default visSbm(   x,   labels = \"default\",   node_names = NULL,   directed = \"default\",   settings = list() )"},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/visSbm.default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"visSbm — visSbm.default","text":"x Sbm model class `BipartiteSBM_fit`, `SimpleSBM_fit` simple numeric `matrix`. labels labels nodes. simple sbm single character (\"default\" -> c(\"nodes\")). sbm bipartite named character (names row col) (\"default\" -> c(row = 'row', col = 'col')). node_names NULL nothing specific, list nodes given graph get interactive nodes names showed clicking block. bipartite case named list: \"row\": character: node names rows \"col\": character: node names columns unipartite case single character vector containing nodes names (Default = NULL). directed Boolean indicating whether network directed default, asymmetrical matrix seen directed. settings list settings","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/visSbm.default.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"visSbm — visSbm.default","text":"visNetwork visual x object","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/visSbm.default.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"visSbm — visSbm.default","text":"List parameters \"edge_threshold\": \"default\" erases many small edges can without isolating nodes (connection).  can also numeric value 0 1, relative (min max) filter small edges value \"edge_color\": character: color edges (default: \"lightblue\") \"arrows\": boolean: edges arrows \"arrow_thickness\": numeric: arrows size \"arrow_start\": character: \"row\" \"col\" labels value according row columns. arrow start selected value \"node_color\": named character: Bipartite case c(row = \"row_color\", col = \"col_color\"). Unipartite case c(\"node_color\") \"node_shape\": named character: Bipartite case c(row = \"row_shape\", col = \"col_shape\"). Unipartite case c(\"node_shape\"). Value visNetwork shape argument visEdges function (\"triangle\",\"dot\",\"square\",etc...) \"digits\": integer: number digits show numbers shown (default: 2)","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/visSbm.html","id":null,"dir":"Reference","previous_headings":"","what":"visSbm — visSbm","title":"visSbm — visSbm","text":"fct plot visNetwork plot adjacency matrix Sbm fit sbm package.","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/visSbm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"visSbm — visSbm","text":"","code":"visSbm(   x,   labels = \"default\",   node_names = NULL,   directed = \"default\",   settings = list() )"},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/visSbm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"visSbm — visSbm","text":"x Sbm model class `BipartiteSBM_fit`, `SimpleSBM_fit` simple numeric `matrix`. labels labels nodes. simple sbm single character (\"default\" -> c(\"nodes\")). sbm bipartite named character (names row col) (\"default\" -> c(row = 'row', col = 'col')). node_names NULL nothing specific, list nodes given graph get interactive nodes names showed clicking block. bipartite case named list: \"row\": character: node names rows \"col\": character: node names columns unipartite case single character vector containing nodes names (Default = NULL). directed Boolean indicating whether network directed default, asymmetrical matrix seen directed. settings list settings","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/visSbm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"visSbm — visSbm","text":"visNetwork visual x object","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/visSbm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"visSbm — visSbm","text":"List parameters \"edge_threshold\": \"default\" erases many small edges can without isolating nodes (connection).  can also numeric value 0 1, relative (min max) filter small edges value \"edge_color\": character: color edges (default: \"lightblue\") \"arrows\": boolean: edges arrows \"arrow_thickness\": numeric: arrows size \"arrow_start\": character: \"row\" \"col\" labels value according row columns. arrow start selected value \"node_color\": named character: Bipartite case c(row = \"row_color\", col = \"col_color\"). Unipartite case c(\"node_color\") \"node_shape\": named character: Bipartite case c(row = \"row_shape\", col = \"col_shape\"). Unipartite case c(\"node_shape\"). Value visNetwork shape argument visEdges function (\"triangle\",\"dot\",\"square\",etc...) \"digits\": integer: number digits show numbers shown (default: 2)","code":""},{"path":"https://theodore.vanrenterghem.io/shinySbm/reference/visSbm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"visSbm — visSbm","text":"","code":"# my_sbm_bi <- sbm::estimateBipartiteSBM(sbm::fungusTreeNetwork$fungus_tree, #                                        model = 'bernoulli') my_sbm_bi <- FungusTreeNetwork$sbmResults$fungus_tree  node_names_bi <- list(   row = FungusTreeNetwork$networks$fungus_names,   col = FungusTreeNetwork$networks$tree_names )  visSbm(my_sbm_bi,   labels = c(row = \"Fungus\", col = \"Tree\"),   node_names = node_names_bi,   settings = list(     arrows = TRUE,     arrow_start = \"Fungus\",     node_color = c(row = \"pink\", col = \"green\"),     node_shape = c(row = \"dot\", col = \"square\")   ) )  {\"x\":{\"nodes\":{\"id\":[\"Fungus_B1\",\"Fungus_B2\",\"Fungus_B3\",\"Fungus_B4\",\"Tree_B1\",\"Tree_B2\",\"Tree_B3\",\"Tree_B4\"],\"label\":[\"Fungus_B1\",\"Fungus_B2\",\"Fungus_B3\",\"Fungus_B4\",\"Tree_B1\",\"Tree_B2\",\"Tree_B3\",\"Tree_B4\"],\"level\":[1,1,1,1,2,2,2,2],\"value\":[0.02655515826088811,0.05570334378875306,0.3166650752961646,0.6010764226541944,0.105049382765684,0.1963967949124021,0.2477304406832458,0.4508233816386681],\"group\":[\"row\",\"row\",\"row\",\"row\",\"col\",\"col\",\"col\",\"col\"],\"text\":[null,null,null,null,null,null,null,null],\"title\":[\"proportion = 0.03\",\"proportion = 0.06\",\"proportion = 0.32\",\"proportion = 0.59\",\"proportion = 0.11\",\"proportion = 0.2\",\"proportion = 0.25\",\"proportion = 0.44\"]},\"edges\":{\"from\":[\"Tree_B1\",\"Tree_B1\",\"Tree_B1\",\"Tree_B2\",\"Tree_B2\",\"Tree_B3\",\"Tree_B3\",\"Tree_B4\"],\"to\":[\"Fungus_B1\",\"Fungus_B2\",\"Fungus_B3\",\"Fungus_B2\",\"Fungus_B4\",\"Fungus_B1\",\"Fungus_B2\",\"Fungus_B2\"],\"value\":[0.9681347782826074,0.520558816802243,0.3245042726104004,0.584398216304718,0.1543344112708817,0.8403706566864549,0.2308939166855925,0.1079303842704209],\"title\":[\"connectivity = 0.97\",\"connectivity = 0.52\",\"connectivity = 0.32\",\"connectivity = 0.58\",\"connectivity = 0.15\",\"connectivity = 0.84\",\"connectivity = 0.23\",\"connectivity = 0.11\"]},\"nodesToDataframe\":true,\"edgesToDataframe\":true,\"options\":{\"width\":\"100%\",\"height\":\"100%\",\"nodes\":{\"shape\":\"dot\"},\"manipulation\":{\"enabled\":false},\"edges\":{\"arrows\":{\"from\":{\"enabled\":true,\"scaleFactor\":0.3}},\"arrowStrikethrough\":false,\"color\":\"lightblue\"},\"groups\":{\"row\":{\"color\":{\"background\":\"pink\",\"highlight\":{\"border\":\"black\",\"background\":\"pink\"}},\"shape\":\"dot\"},\"useDefaultGroups\":true,\"col\":{\"color\":{\"background\":\"green\",\"highlight\":{\"border\":\"black\",\"background\":\"green\"}},\"shape\":\"square\"}},\"physics\":{\"solver\":\"forceAtlas2Based\"},\"layout\":{\"hierarchical\":{\"enabled\":true}},\"interaction\":{\"keyboard\":true,\"zoomSpeed\":1}},\"groups\":[\"row\",\"col\"],\"width\":null,\"height\":400,\"idselection\":{\"enabled\":false},\"byselection\":{\"enabled\":false},\"main\":null,\"submain\":null,\"footer\":null,\"background\":\"rgba(0, 0, 0, 0)\",\"tooltipStay\":300,\"tooltipStyle\":\"position: fixed;visibility:hidden;padding: 5px;white-space: nowrap;font-family: verdana;font-size:14px;font-color:#000000;background-color: #f5f4ed;-moz-border-radius: 3px;-webkit-border-radius: 3px;border-radius: 3px;border: 1px solid #808074;box-shadow: 3px 3px 10px rgba(0, 0, 0, 0.2);\"},\"evals\":[],\"jsHooks\":[]}  # my_sbm_uni <- sbm::estimateSimpleSBM(sbm::fungusTreeNetwork$tree_tree, #                                      model = \"poisson\") my_sbm_uni <- FungusTreeNetwork$sbmResults$tree_tree  node_names_uni <- list(FungusTreeNetwork$networks$tree_names)  visSbm(my_sbm_uni,   labels = c(\"Tree\"),   node_names = node_names_uni,   settings = list(     edge_threshold = 0.01,     edge_color = \"grey\",     node_color = c(\"violet\")   ) )  {\"x\":{\"nodes\":{\"id\":[1,2,3,4,5,6],\"label\":[\"Tree_B1\",\"Tree_B2\",\"Tree_B3\",\"Tree_B4\",\"Tree_B5\",\"Tree_B6\"],\"value\":[0.1763561455710689,0.1957351033798733,0.13759822995346,0.1569771877622644,0.1569771877622644,0.1763561455710689],\"text\":[\"Tree_B1/newline/Abies alba/newline/Abies grandis/newline/Cedrus spp (Cedrus atlantica, Cedrus libani) /newline/Larix decidua/newline/Picea excelsa/newline/Pinus nigra laricio/newline/Pinus pinaster/newline/Pinus sylvestris/newline/Pseudotsuga menziesii\",\"Tree_B2/newline/Large Maples (Acer platanoides, Acer pseudoplatanus)/newline/Fagus silvatica/newline/Fraxinus spp (Fraxinus angustifolia, Fraxinus excelsior) /newline/Juglans spp (Juglans nigra, Juglans regia) /newline/Cultivated Poplars (Populus trichocarpa, P. canescens, P.alba, P.nigra and their cultivated hybrids)/newline/Prunus avium/newline/Quercus petraea/newline/Quercus robur/newline/Quercus rubra/newline/Sorbus torminalis\",\"Tree_B3/newline/Abies nordmanniana/newline/Larix kaempferi/newline/Picea sitchensis/newline/Pinus halepensis/newline/Pinus nigra nigra/newline/Pinus strobus/newline/Pinus uncinata\",\"Tree_B4/newline/Small Maples (Acer campestre, Acer monspessulanum, Acer negundo, Acer opalus) /newline/Alnus glutinosa/newline/Castanea sativa/newline/Quercus ilex/newline/Quercus pubescens/newline/Quercus suber/newline/Sorbus aria/newline/Tilia spp (Tilia platiphyllos, Tilia cordata) \",\"Tree_B5/newline/Cupressus sempervirens/newline/Pinus brutia (Pinus brutia, Pinus brutia eldarica)/newline/Pinus cembra/newline/Pinus pinea/newline/Pinus radiata/newline/Pinus taeda/newline/Platanus hybrida/newline/Tsuga heterophylla\",\"Tree_B6/newline/Betulus spp (Betula pendula, Betula pubescens) /newline/Carpinus betulus/newline/Populus tremula/newline/Quercus pyrenaica/newline/Sorbus aucuparia/newline/Sorbus domestica/newline/Taxus baccata/newline/Thuja plicata/newline/Ulmus spp (Ulmus minor, Ulmus laevis, Ulmus glabra) \"],\"title\":[\"proportion = 0.18\",\"proportion = 0.2\",\"proportion = 0.14\",\"proportion = 0.16\",\"proportion = 0.16\",\"proportion = 0.16\"]},\"edges\":{\"from\":[1,1,1,1,1,1,2,2,2,2,2,3,3,3,3,4,4,4,5,5,6],\"to\":[1,2,3,4,5,6,2,3,4,5,6,3,4,5,6,4,5,6,5,6,6],\"value\":[9.028626982748953,3.291035476917589,6.047274425567874,1.068502701925505,1.854642119114858,0.1106257221035275,5.964601995845185,1.336375651865549,2.176100681975297,0.4999912342506725,0.2654770314593576,3.940659139660687,0.4026345835501051,1.462456490113269,0.07080814030998535,0.8216637437120358,0.1408933246030764,0.07793390866285368,0.5412140640437284,0.02263218251652199,0.02940543449865804],\"title\":[\"connectivity = 9.03\",\"connectivity = 3.29\",\"connectivity = 6.05\",\"connectivity = 1.07\",\"connectivity = 1.85\",\"connectivity = 0.11\",\"connectivity = 5.96\",\"connectivity = 1.34\",\"connectivity = 2.18\",\"connectivity = 0.5\",\"connectivity = 0.27\",\"connectivity = 3.94\",\"connectivity = 0.4\",\"connectivity = 1.46\",\"connectivity = 0.07\",\"connectivity = 0.82\",\"connectivity = 0.14\",\"connectivity = 0.08\",\"connectivity = 0.54\",\"connectivity = 0.02\",\"connectivity = 0.03\"]},\"nodesToDataframe\":true,\"edgesToDataframe\":true,\"options\":{\"width\":\"100%\",\"height\":\"100%\",\"nodes\":{\"shape\":\"dot\",\"color\":{\"background\":\"violet\",\"highlight\":{\"border\":\"black\",\"background\":\"violet\"}}},\"manipulation\":{\"enabled\":false},\"edges\":{\"arrows\":[],\"arrowStrikethrough\":false,\"color\":\"grey\"},\"physics\":{\"solver\":\"forceAtlas2Based\"},\"interaction\":{\"keyboard\":true,\"zoomSpeed\":1}},\"groups\":null,\"width\":null,\"height\":400,\"idselection\":{\"enabled\":false},\"byselection\":{\"enabled\":false},\"main\":null,\"submain\":null,\"footer\":null,\"background\":\"rgba(0, 0, 0, 0)\",\"tooltipStay\":300,\"tooltipStyle\":\"position: fixed;visibility:hidden;padding: 5px;white-space: nowrap;font-family: verdana;font-size:14px;font-color:#000000;background-color: #f5f4ed;-moz-border-radius: 3px;-webkit-border-radius: 3px;border-radius: 3px;border: 1px solid #808074;box-shadow: 3px 3px 10px rgba(0, 0, 0, 0.2);\"},\"evals\":[],\"jsHooks\":[]}"}]
