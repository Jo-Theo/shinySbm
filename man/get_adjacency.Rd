% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fct_edges_to_adjacency.R
\name{get_adjacency}
\alias{get_adjacency}
\title{get_adjacency}
\usage{
get_adjacency(edges, type = c("unipartite", "bipartite"), directed = F)
}
\arguments{
\item{edges}{Can be a table which is a list pair of nodes (nodes ids are one the two first columns) a numerical third column can be associated will be the connections values.
Or an igraph object}

\item{type}{network type can be `'bipartite'` or `'unipartite'`}

\item{directed}{whether or not connections are directed (`T`) or symetrical (`F`) (default is set to `TRUE`)}
}
\value{
an adjacency/incidence matrix (data.frame) representing the network
}
\description{
A fct that build an adjacency matrix from a list of edges or an igraph object
}
\examples{
# For unipartite network
data_uni <- FungusTreeNetwork$tree_tree

# If your network is symmetric :
my_mat <- get_adjacency(data_uni$edges,
  type = data_uni$type,
  directed = FALSE
)
# If your network is directed :
my_mat <- get_adjacency(data_uni$edges,
  type = data_uni$type,
  directed = TRUE
)

# For bipartite network
data_bi <- FungusTreeNetwork$fungus_tree

my_mat <- get_adjacency(data_bi$edges, type = data_bi$type)

# In any case you can also use 2 columns data.frames if your network is binary.
binary_net <- FungusTreeNetwork$fungus_tree$edges[,-3]

my_mat <- get_adjacency(binary_net, type = data_bi$type)

# For igraph object the usage is the same

require("igraphdata")
data("karate",package = "igraphdata")
class(karate)

get_adjacency(karate)

}
